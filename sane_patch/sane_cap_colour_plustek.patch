diff --git a/backend/plustek.c b/backend/plustek.c
index f3b37e1..c007aa1 100644
--- a/backend/plustek.c
+++ b/backend/plustek.c
@@ -731,6 +731,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_MODE].constraint_type = SANE_CONSTRAINT_STRING_LIST;
 	s->opt[OPT_MODE].constraint.string_list = mode_list;
 	s->val[OPT_MODE].w = 2; /* Color */
+	s->opt[OPT_MODE].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	/* bit depth */
 	s->opt[OPT_BIT_DEPTH].name  = SANE_NAME_BIT_DEPTH;
@@ -745,6 +746,7 @@ init_options( Plustek_Scanner *s )
 	else
 		s->opt[OPT_BIT_DEPTH].constraint.word_list = bpp_lm9832_list;
 	s->val[OPT_BIT_DEPTH].w = 8;
+	s->opt[OPT_BIT_DEPTH].cap |= SANE_CAP_COLOUR; /* affects icc */
 	
 	if (caps->workaroundFlag & _WAF_ONLY_8BIT)
 		_DISABLE(OPT_BIT_DEPTH);
@@ -758,6 +760,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_EXT_MODE].constraint_type = SANE_CONSTRAINT_STRING_LIST;
 	s->opt[OPT_EXT_MODE].constraint.string_list = source_list;
 	s->val[OPT_EXT_MODE].w     = 0; /* Normal */
+	/* TODO s->opt[OPT_EXT_MODE].cap |= SANE_CAP_COLOUR; affects icc */
 
 	/* brightness */
 	s->opt[OPT_BRIGHTNESS].name  = SANE_NAME_BRIGHTNESS;
@@ -768,6 +771,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_BRIGHTNESS].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_BRIGHTNESS].constraint.range = &percentage_range;
 	s->val[OPT_BRIGHTNESS].w     = 0;
+	s->opt[OPT_BRIGHTNESS].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	/* contrast */
 	s->opt[OPT_CONTRAST].name  = SANE_NAME_CONTRAST;
@@ -778,6 +782,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_CONTRAST].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_CONTRAST].constraint.range = &percentage_range;
 	s->val[OPT_CONTRAST].w     = 0;
+	s->opt[OPT_CONTRAST].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	/* resolution */
 	s->opt[OPT_RESOLUTION].name  = SANE_NAME_SCAN_RESOLUTION;
@@ -795,6 +800,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_CUSTOM_GAMMA].desc  = SANE_DESC_CUSTOM_GAMMA;
 	s->opt[OPT_CUSTOM_GAMMA].type  = SANE_TYPE_BOOL;
 	s->val[OPT_CUSTOM_GAMMA].w     = SANE_FALSE;
+	/* s->opt[OPT_CUSTOM_GAMMA].cap |= SANE_CAP_COLOUR; affects icc */
 
 	/* preview */
 	s->opt[OPT_PREVIEW].name  = SANE_NAME_PREVIEW;
@@ -802,6 +808,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_PREVIEW].desc  = SANE_DESC_PREVIEW;
 	s->opt[OPT_PREVIEW].cap   = SANE_CAP_SOFT_DETECT | SANE_CAP_SOFT_SELECT;
 	s->val[OPT_PREVIEW].w     = 0;
+	/* TODO s->opt[OPT_PREVIEW].cap |= SANE_CAP_COLOUR; affects icc */
 
 	/* "Geometry" group: */
 	s->opt[OPT_GEOMETRY_GROUP].title = SANE_I18N("Geometry");
@@ -867,6 +874,7 @@ init_options( Plustek_Scanner *s )
 	s->val[OPT_GAMMA_VECTOR].wa   = &(s->gamma_table[0][0]);
 	s->opt[OPT_GAMMA_VECTOR].constraint.range = &(s->gamma_range);
 	s->opt[OPT_GAMMA_VECTOR].size = s->gamma_length * sizeof(SANE_Word);
+	s->opt[OPT_GAMMA_VECTOR].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	/* red gamma vector */
 	s->opt[OPT_GAMMA_VECTOR_R].name  = SANE_NAME_GAMMA_VECTOR_R;
@@ -877,6 +885,7 @@ init_options( Plustek_Scanner *s )
 	s->val[OPT_GAMMA_VECTOR_R].wa   = &(s->gamma_table[1][0]);
 	s->opt[OPT_GAMMA_VECTOR_R].constraint.range = &(s->gamma_range);
 	s->opt[OPT_GAMMA_VECTOR_R].size = s->gamma_length * sizeof(SANE_Word);
+	s->opt[OPT_GAMMA_VECTOR_R].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	/* green gamma vector */
 	s->opt[OPT_GAMMA_VECTOR_G].name  = SANE_NAME_GAMMA_VECTOR_G;
@@ -887,6 +896,7 @@ init_options( Plustek_Scanner *s )
 	s->val[OPT_GAMMA_VECTOR_G].wa   = &(s->gamma_table[2][0]);
 	s->opt[OPT_GAMMA_VECTOR_G].constraint.range = &(s->gamma_range);
 	s->opt[OPT_GAMMA_VECTOR_G].size = s->gamma_length * sizeof(SANE_Word);
+	s->opt[OPT_GAMMA_VECTOR_G].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	/* blue gamma vector */
 	s->opt[OPT_GAMMA_VECTOR_B].name  = SANE_NAME_GAMMA_VECTOR_B;
@@ -897,6 +907,7 @@ init_options( Plustek_Scanner *s )
 	s->val[OPT_GAMMA_VECTOR_B].wa   = &(s->gamma_table[3][0]);
 	s->opt[OPT_GAMMA_VECTOR_B].constraint.range = &(s->gamma_range);
 	s->opt[OPT_GAMMA_VECTOR_B].size = s->gamma_length * sizeof(SANE_Word);
+	s->opt[OPT_GAMMA_VECTOR_G].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	/* GAMMA stuff is disabled per default */	
 	_DISABLE(OPT_GAMMA_VECTOR);
@@ -1003,6 +1014,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_REDGAIN].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_REDGAIN].constraint.range = &gain_range;
 	s->val[OPT_OVR_REDGAIN].w     = adj->rgain;
+	s->opt[OPT_OVR_REDGAIN].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	s->opt[OPT_OVR_REDOFS].name  = "red-offset";
 	s->opt[OPT_OVR_REDOFS].title = SANE_I18N("Red offset");
@@ -1011,6 +1023,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_REDOFS].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_REDOFS].constraint.range = &gain_range;
 	s->val[OPT_OVR_REDOFS].w     = adj->rofs;
+	s->opt[OPT_OVR_REDOFS].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	s->opt[OPT_OVR_GREENGAIN].name  = "green-gain";
 	s->opt[OPT_OVR_GREENGAIN].title = SANE_I18N("Green gain");
@@ -1019,6 +1032,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_GREENGAIN].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_GREENGAIN].constraint.range = &gain_range;
 	s->val[OPT_OVR_GREENGAIN].w     = adj->ggain;
+	s->opt[OPT_OVR_GREENGAIN].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	s->opt[OPT_OVR_GREENOFS].name  = "green-offset";
 	s->opt[OPT_OVR_GREENOFS].title = SANE_I18N("Green offset");
@@ -1027,6 +1041,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_GREENOFS].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_GREENOFS].constraint.range = &gain_range;
 	s->val[OPT_OVR_GREENOFS].w     = adj->gofs;
+	s->opt[OPT_OVR_GREENOFS].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	s->opt[OPT_OVR_BLUEGAIN].name  = "blue-gain";
 	s->opt[OPT_OVR_BLUEGAIN].title = SANE_I18N("Blue gain");
@@ -1035,6 +1050,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_BLUEGAIN].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_BLUEGAIN].constraint.range = &gain_range;
 	s->val[OPT_OVR_BLUEGAIN].w     = adj->bgain;
+	s->opt[OPT_OVR_BLUEGAIN].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	s->opt[OPT_OVR_BLUEOFS].name  = "blue-offset";
 	s->opt[OPT_OVR_BLUEOFS].title = SANE_I18N("Blue offset");
@@ -1043,6 +1059,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_BLUEOFS].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_BLUEOFS].constraint.range = &gain_range;
 	s->val[OPT_OVR_BLUEOFS].w     = adj->bofs;
+	s->opt[OPT_OVR_BLUEOFS].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	s->opt[OPT_OVR_RED_LOFF].name  = "redlamp-off";
 	s->opt[OPT_OVR_RED_LOFF].title = SANE_I18N("Red lamp off");
@@ -1051,6 +1068,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_RED_LOFF].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_RED_LOFF].constraint.range = &loff_range;
 	s->val[OPT_OVR_RED_LOFF].w     = adj->rlampoff;
+	s->opt[OPT_OVR_RED_LOFF].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	s->opt[OPT_OVR_GREEN_LOFF].name  = "greenlamp-off";
 	s->opt[OPT_OVR_GREEN_LOFF].title = SANE_I18N("Green lamp off");
@@ -1059,6 +1077,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_GREEN_LOFF].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_GREEN_LOFF].constraint.range = &loff_range;
 	s->val[OPT_OVR_GREEN_LOFF].w     = adj->glampoff;
+	s->opt[OPT_OVR_GREEN_LOFF].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	s->opt[OPT_OVR_BLUE_LOFF].name  = "bluelamp-off";
 	s->opt[OPT_OVR_BLUE_LOFF].title = SANE_I18N("Blue lamp off");
@@ -1067,6 +1086,7 @@ init_options( Plustek_Scanner *s )
 	s->opt[OPT_OVR_BLUE_LOFF].constraint_type = SANE_CONSTRAINT_RANGE;
 	s->opt[OPT_OVR_BLUE_LOFF].constraint.range = &loff_range;
 	s->val[OPT_OVR_BLUE_LOFF].w     = adj->blampoff;
+	s->opt[OPT_OVR_BLUE_LOFF].cap |= SANE_CAP_COLOUR; /* affects icc */
 
 	/* only available for CIS devices*/
 	if( !usb_IsCISDevice( dev )) {
