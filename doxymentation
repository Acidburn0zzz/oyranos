/**
    @mainpage
    <h3 align="center">Copyright 2004-2005 &copy; Kai-Uwe Behrmann</h3>

    @section text_contents Descriptive Contents
    @ref intro |
    @ref concept |
    @ref proposal |
    @ref tools |
    @ref user |
    @ref install |
    @ref links

    @author Kai-Uwe Behrmann
    @date Project start: March 2004

    <dl compact><dt><b>Internet:</b></dt><dd>http://www.oyranos.org</dd></dl>

    @n@n
    @section intro Introduction
  
    Oyranos is intended as a entry point for colour savy applications.
    In its current stage it configures profile paths, sets default profiles, 
    maps devices to profiles, sets a monitor profile in X and uploads a vcgt
    tag. This means for instance all applications using Oyranos will use for
    incoming digital camera picture the same profile and watch it through the
    same monitor profile.

    @section tools Tools Documentation
    - oyranos-gamma - a commandline tool for calling from a setup script like
      .xinitrc. It selects a profile for the current monitor and sets up the
      X server at startup time. Usage:
    @verbatim
    # select a monitor profile, load the binary blob into X and fill the
    # VideoCardGammaTable, if appropriate
    oyranos-gamma
    @endverbatim
    - oyranos_config_flu - a sample application using some of the Oyranos APIs

    @section user User Documentation
    The basic Oyranos API gets included with oyranos.h. An application, which
    wants to use these functions, needs to link against oyranos and elektra.
    - @ref device_profiles - profiles which characterise devices
    - @ref default_profiles - get and set commonly used profiles; part of user policies
    - @ref path_names  - get information about configured and used profile search paths 
    - @ref profile_lists - provides the search path content as profile lists for your GUI
    - @ref profile_handling - file I/O and more

    The monitor related API is contained in oyranos_monitor.h. Linkage on Linux
    needs X11. Therefore this library part is separated from the main one. 
    - @ref monitor_api - monitor profile configuration

    The key names, which Oyranos uses to store its configuration in an elektra
    file tree, are defined in oyranos_definitions.h.
    <br>

 */

/** @page concept_1.0 Concept for 1.0

    @section concept Concept
    The here described concepts are targeted until version 1.0 of Oyranos.
    They are intended to make the API consistent and its usage predictable.
    A additional page shall describe the behaviour of Oyranos, default settings
    and recommendations to developers who like to interact with the system.

    @subsection os_concept Interoperatibility on Operating Systems
    - Oyranos is intended to work on at least Linux, osX and (hopefully) Windows
    - On Linux the <a href="http://elektra.sf.net">Elektra</a> configuration
      library is used for managing and storing the configuration.
    - If publically available Oyranos will sit on top of native Colour
      Management Systems like ColorSync&copy; or ICM&copy;.

    @subsection path_concept Paths Configuration
    - Paths are scanned secursively avoiding links for security reasons.
    - Paths count allways, to aim consistency. There are no exceptions.

    @subsection general_concept Personality
    - Users configure their own settings, while administrators 
      configure system wide settings.
    - User settings have priority over system settings
    - All settings, called policy as a whole, shall be saveable and recoverable.

    @subsection memory_concept Memory Handling
    - For strings, constant pointers to chars are the prefered form (utf8?)
    - For the need of allocating unknown sizes of memory, a function is passed
      by the user allocating the memory. The returned block goes into the
      responsibility of the user.
    - More complex library allocated memory blocks, like profile name lists,
      can be freed with a Oyranos provided function.

    @subsection information_concept Information Exchange
    - Functions are needed which show useful informations for GUIs, about the
      content in the Profiles and about possible errors.
    - Some descriptors are provided as static strings, and may help keeping 
      the user interface consistent throughout toolkits. (translation?)
    - A callback mechanism informs about changes regarding the configuration.
    - Special informations like for instance about the display geometry are not
      planed so far. You query monitor profiles by screen name not by geometry.

    @subsection special_concept Special Considerations
    - It should be easy to query Oyranos for certain informations contained in a
      profile like primaries, gamma or profile type.
    - To some degree useablity checks for profiles should be included.

    @subsection device_configuration Devices Configuration
    - A text parser should allow to distinguish the same profile for multiple
      devices and vice versa.

 */

/** @page proposal Proposal
    @section proposal Proposals
    @subsection identity_proposal Profile Identity Proposal
    One major benefit if a configuration system is the ashurance to use the
    correct profiles.\n
    A recently closed flaw in the ICC spec was a missing
    identification tag inside the profile. While profiles may have varaying
    names and descriptions, the now in the ICC standard included md5 checksum
    approach fits well in the demand of easily and relyable distinguish between
    various profiles.\n
    The plan is to check or possibly recalculate the md5 sum and modify the
    profile in the header accordingly. This makes sense especially for older
    profiles. This feature makes of course only sense of the file access is
    resonably quick. A hash table may help here.\n

    @subsection correlation_proposal Correlation Proposal
    An other toppic is the correlation of device and program settings during
    image production and the selection of the correct profile for the needed
    conversions. The profile should allways fit to the tool chain used. 
    My suggestion is here to embedd these settings in a easy recoverable
    way into the profile. A special ascii tag could be used therefor.\n
    External libraries like sane or cups should tell Oyranos theyre
    settings and query for a suitable profile. In the case of a not finding a
    fitting profile the external library may ask for an alternative list of
    settings. With selecting the desired settings the profile can be selected.
    The goal herein is to give the user the freedom of choice and the security
    regarding quality.

    More proposals and ideas can be found on http://www.behrmann.name in the
    Oyranos section.
 */

/** @page requirements_1.0 Release 1.0 Requirements

    Oyranos version 1.0 is about a configuration library only. The conceptual 
    explanations in @ref concept are about all to solve for
    Oyranos 1.0 .

    Date: unknown

    OS: Linux , osX , Windows (maybe)

    the Concept page is about to solve for 1.0

    More:
    <ul>
    <li>add OY_DEFAULT_WORKSPACE_RGB_PROFILE</li>
    <li>more preferences like described in OpenICC email of Jan-Peter Homann
        Subject : Re: [OpenICC] Oyranos APIs update  15.09.05 </li>
    <li></li>
    <li></li>
    <li></li>
    </ul>

 */

/** @page install_current Installation

    @section install Installation
    Oyranos depends on following libraries:<br>

    <ul>
    <li><a href="http://elektra.sf.net">Elektra</a>, this is the configuration backend for linux , <a href="http://sourceforge.net/project/showfiles.php?group_id=117521">version 0.5.0.4</a> s needed due to a rename into libelektra . </li>
    <li><a href="http://www.osc.edu/~jbryan/FLU">FLU</a> version >= 2.14 
   for a convenient file browser (optionally, should be installed to play with Oyranos)</li>
    <li><a href="http://www.fltk.org">fltk</a> version >= 1.1.4 needed by FLU<br>
    you may configure fltk with several options enabled<br>
    --enable-threads is needed for threads support (in ICC Examin)<br>
    --enable-xft is ok for antialiased fonts<br>
    --enable-debug is generally a good choice<br>
    --enable-shared is sometimes a good choice for smaller executables</li>
    <li><a href="http://www.etg.e-technik.uni-erlangen.de/web/doe/xcalib/">Xcalib</a> for loading a given  VideoCardGammaTag from profile to a running XFree86/Xorg session (optionally)</li>
    </ul><br>
    For building unpack the tgz file and type #make; make install.<br><br>
    Optionally you can specifiy an other than the default prefix /opt/local by typing:<br>
    #configure.sh --prefix /what/you/like<br>
    #make<br>
    #make install   (optionally)<br>
 */

/** @page links References
    @section links Links
    - cross platform colour information exchange standard, called ICC - http://www.color.org
    - Elektra, configuration engine used on Linux - http://elektra.sf.net
    - Xcalib is vcgt to window server uploader - http://www.etg.e-technik.uni-erlangen.de/web/doe/xcalib/
    - Oyranos related applications, proposals and links -
      http://www.behrmann.name
    - _ICC_PROFILE spec at http://www.burtonini.com/computing/x-icc-profiles-spec-0.1.html, for an Xatom to communicate profiles over X
    - Discussions about an Linux CMS happen at http://lists.freedesktop.org/mailman/listinfo/openicc
 */

/** @file oyranos.h
    @brief The API header to include in your application.
    
    This file contains all functions and structs available in the Oyranos API.
    For further macros see @file oyranos_definitions.h
    For the Oyranos Monitor API see @file oyranos_monitor.h
*/

/** @file oyranos_definitions.h
    @brief The macro header to include in your application without using any Oyranos function.
    
    This file contains all macros which are relevant to the Oyranos API using
    the Elektra library as configuration engine.
    For the Oyranos API see @file oyranos.h
    @see elektra at sourceforge <a href="http://elektra.sf.net">Elektra</a>
*/

/** @file oyranos_monitor.h
    @brief The Monitor API header to include in your application.
    
    This file contains all functions and structs available in the Oyranos Monitor API.
    @see oyranos_definitions.h for elektra macros
    @see oyranos.h for the Oyranos API
*/

/** @file oyranos.c
    @brief The API implementation
    
    This file contains functions implementing the Oyranos API.
    For the Oyranos API see @file oyranos.h
*/

/** @file oyranos_monitor.c
    @brief The Monitor API implementation
    
    This file contains functions implementing the Oyranos Monitor API.
    For the Oyranos Monitor API see @file oyranos_monitor.h
    For the Oyranos API see @file oyranos.h
*/

/** @file oyranos_gamma.c
    @brief A small helper for setting up Oyranos at the window server
           start time.
    
    This helper searches for the appropriate monitor profile in the Oyranos 
    Deviceprofiles database. If found it tells the window server about it and
    loads a possibly available VideoCardGammaTable tag into the running session.
    It uses the Oyranos Monitor API from @file oyranos_monitor.h
*/


