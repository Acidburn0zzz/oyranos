# Makefile.in generated by automake 1.9.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am 907 2006-08-18 11:56:44Z pertusus $


SOURCES = $(libelektra_a_SOURCES) $(libelektra_la_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src/libelektra
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/exportobjects.sh.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/extensions.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/include/config.h
CONFIG_CLEAN_FILES = exportobjects.sh
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libelektra_a_AR = $(AR) $(ARFLAGS)
am__objects_1 = libelektra_a-kdb.$(OBJEXT) \
	libelektra_a-error.$(OBJEXT) libelektra_a-key.$(OBJEXT) \
	libelektra_a-keyset.$(OBJEXT) \
	libelektra_a-kdbhighlevel.$(OBJEXT) \
	libelektra_a-backendhelpers.$(OBJEXT)
am_libelektra_a_OBJECTS = $(am__objects_1) \
	libelektra_a-exported_symbols.$(OBJEXT)
libelektra_a_OBJECTS = $(am_libelektra_a_OBJECTS)
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__objects_2 = libelektra_la-kdb.lo libelektra_la-error.lo \
	libelektra_la-key.lo libelektra_la-keyset.lo \
	libelektra_la-kdbhighlevel.lo libelektra_la-backendhelpers.lo
am_libelektra_la_OBJECTS = $(am__objects_2)
libelektra_la_OBJECTS = $(am_libelektra_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libelektra_a_SOURCES) $(libelektra_la_SOURCES)
DIST_SOURCES = $(libelektra_a_SOURCES) $(libelektra_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
INSTALL = @INSTALL@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXPERIMENTAL_FALSE = @EXPERIMENTAL_FALSE@
EXPERIMENTAL_TRUE = @EXPERIMENTAL_TRUE@
F77 = @F77@
FFLAGS = @FFLAGS@
HAVE_DOXYGEN_FALSE = @HAVE_DOXYGEN_FALSE@
HAVE_DOXYGEN_TRUE = @HAVE_DOXYGEN_TRUE@
HAVE_GLIBC_MNTENT_FALSE = @HAVE_GLIBC_MNTENT_FALSE@
HAVE_GLIBC_MNTENT_TRUE = @HAVE_GLIBC_MNTENT_TRUE@
HAVE_MAN2HTML_FALSE = @HAVE_MAN2HTML_FALSE@
HAVE_MAN2HTML_TRUE = @HAVE_MAN2HTML_TRUE@
HAVE_XSL_FALSE = @HAVE_XSL_FALSE@
HAVE_XSL_TRUE = @HAVE_XSL_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTDLINCL = @LTDLINCL@
LTLIBICONV = @LTLIBICONV@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
NM = @NM@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
backend_static_libs = @backend_static_libs@
backenddir = @backenddir@
backends = @backends@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
dbroot = @dbroot@
default_backend = @default_backend@
default_dbackend = @default_dbackend@
default_docbook = @default_docbook@
develdocdir = @develdocdir@
docdir = @docdir@
doxygen = @doxygen@
elektratools = @elektratools@
exec_prefix = @exec_prefix@
hlvlbackenddir = @hlvlbackenddir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
man2html = @man2html@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
privatelibs = @privatelibs@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
ulibdir = @ulibdir@
xsltproc = @xsltproc@
AM_CPPFLAGS = -I$(top_srcdir)/src/include $(LTDLINCL)
elektra_sources = kdb.c error.c key.c keyset.c kdbhighlevel.c backendhelpers.c
elektra_dependencies = ../include/kdbprivate.h \
	../include/kdb.h \
	../include/kdbbackend.h

lib_LIBRARIES = libelektra.a
libelektra_a_SOURCES = $(elektra_sources) \
		exported_symbols.c \
		../include/kdbLibLoader.h

libelektra_a_DEPENDENCIES = $(elektra_dependencies) objects
libelektra_a_CFLAGS = -DELEKTRA_STATIC -DDEFAULT_BACKEND=\"$(default_backend)\"
libelektra_a_LIBADD = `cat objects`
BUILT_SOURCES = exported_symbols.c

#if EXPERIMENTAL
#libelektra_a_LIBADD += ../backends/ini/libelektra_ini_a-ini.$(OBJEXT) \
#                       ../backends/ini/libelektra_ini_a-helpers.$(OBJEXT) \
#		       ../backends/ini/libelektra_ini_a-parser.$(OBJEXT)
#endif
lib_LTLIBRARIES = libelektra.la
libelektra_la_SOURCES = $(elektra_sources)
libelektra_la_DEPENDENCIES = $(elektra_dependencies) ../libloader/libloader-dynamic.la
libelektra_la_CFLAGS = -DDEFAULT_BACKEND=\"default\"
libelektra_la_LDFLAGS = -version-info 2:1:0
libelektra_la_LIBADD = ../libloader/libloader-dynamic.la $(LIBICONV)
EXTRA_DIST = exportsymbols.sh

#objects: ../libloader/libloader-static.a all_backends ../libelektratools/libelektratools.a
#	@list='$(backends)'; for backend in $$list; do \
#	  bck_list=$$bck_list" ../backends/$$backend/libelektra-$$backend.a "; \
#	done; \
#	$(SHELL) exportobjects.sh ../libloader/libloader-static.a $$bck_list ../libelektratools/libelektratools.a
object_deps = ../libloader/libloader-static.a $(backend_static_libs)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/libelektra/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/libelektra/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
exportobjects.sh: $(top_builddir)/config.status $(srcdir)/exportobjects.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libelektra.a: $(libelektra_a_OBJECTS) $(libelektra_a_DEPENDENCIES) 
	-rm -f libelektra.a
	$(libelektra_a_AR) libelektra.a $(libelektra_a_OBJECTS) $(libelektra_a_LIBADD)
	$(RANLIB) libelektra.a
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libelektra.la: $(libelektra_la_OBJECTS) $(libelektra_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libelektra_la_LDFLAGS) $(libelektra_la_OBJECTS) $(libelektra_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_a-backendhelpers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_a-error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_a-exported_symbols.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_a-kdb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_a-kdbhighlevel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_a-key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_a-keyset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_la-backendhelpers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_la-kdb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_la-kdbhighlevel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_la-key.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libelektra_la-keyset.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libelektra_a-kdb.o: kdb.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-kdb.o -MD -MP -MF "$(DEPDIR)/libelektra_a-kdb.Tpo" -c -o libelektra_a-kdb.o `test -f 'kdb.c' || echo '$(srcdir)/'`kdb.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-kdb.Tpo" "$(DEPDIR)/libelektra_a-kdb.Po"; else rm -f "$(DEPDIR)/libelektra_a-kdb.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdb.c' object='libelektra_a-kdb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-kdb.o `test -f 'kdb.c' || echo '$(srcdir)/'`kdb.c

libelektra_a-kdb.obj: kdb.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-kdb.obj -MD -MP -MF "$(DEPDIR)/libelektra_a-kdb.Tpo" -c -o libelektra_a-kdb.obj `if test -f 'kdb.c'; then $(CYGPATH_W) 'kdb.c'; else $(CYGPATH_W) '$(srcdir)/kdb.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-kdb.Tpo" "$(DEPDIR)/libelektra_a-kdb.Po"; else rm -f "$(DEPDIR)/libelektra_a-kdb.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdb.c' object='libelektra_a-kdb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-kdb.obj `if test -f 'kdb.c'; then $(CYGPATH_W) 'kdb.c'; else $(CYGPATH_W) '$(srcdir)/kdb.c'; fi`

libelektra_a-error.o: error.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-error.o -MD -MP -MF "$(DEPDIR)/libelektra_a-error.Tpo" -c -o libelektra_a-error.o `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-error.Tpo" "$(DEPDIR)/libelektra_a-error.Po"; else rm -f "$(DEPDIR)/libelektra_a-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libelektra_a-error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-error.o `test -f 'error.c' || echo '$(srcdir)/'`error.c

libelektra_a-error.obj: error.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-error.obj -MD -MP -MF "$(DEPDIR)/libelektra_a-error.Tpo" -c -o libelektra_a-error.obj `if test -f 'error.c'; then $(CYGPATH_W) 'error.c'; else $(CYGPATH_W) '$(srcdir)/error.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-error.Tpo" "$(DEPDIR)/libelektra_a-error.Po"; else rm -f "$(DEPDIR)/libelektra_a-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libelektra_a-error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-error.obj `if test -f 'error.c'; then $(CYGPATH_W) 'error.c'; else $(CYGPATH_W) '$(srcdir)/error.c'; fi`

libelektra_a-key.o: key.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-key.o -MD -MP -MF "$(DEPDIR)/libelektra_a-key.Tpo" -c -o libelektra_a-key.o `test -f 'key.c' || echo '$(srcdir)/'`key.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-key.Tpo" "$(DEPDIR)/libelektra_a-key.Po"; else rm -f "$(DEPDIR)/libelektra_a-key.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='key.c' object='libelektra_a-key.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-key.o `test -f 'key.c' || echo '$(srcdir)/'`key.c

libelektra_a-key.obj: key.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-key.obj -MD -MP -MF "$(DEPDIR)/libelektra_a-key.Tpo" -c -o libelektra_a-key.obj `if test -f 'key.c'; then $(CYGPATH_W) 'key.c'; else $(CYGPATH_W) '$(srcdir)/key.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-key.Tpo" "$(DEPDIR)/libelektra_a-key.Po"; else rm -f "$(DEPDIR)/libelektra_a-key.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='key.c' object='libelektra_a-key.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-key.obj `if test -f 'key.c'; then $(CYGPATH_W) 'key.c'; else $(CYGPATH_W) '$(srcdir)/key.c'; fi`

libelektra_a-keyset.o: keyset.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-keyset.o -MD -MP -MF "$(DEPDIR)/libelektra_a-keyset.Tpo" -c -o libelektra_a-keyset.o `test -f 'keyset.c' || echo '$(srcdir)/'`keyset.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-keyset.Tpo" "$(DEPDIR)/libelektra_a-keyset.Po"; else rm -f "$(DEPDIR)/libelektra_a-keyset.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='keyset.c' object='libelektra_a-keyset.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-keyset.o `test -f 'keyset.c' || echo '$(srcdir)/'`keyset.c

libelektra_a-keyset.obj: keyset.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-keyset.obj -MD -MP -MF "$(DEPDIR)/libelektra_a-keyset.Tpo" -c -o libelektra_a-keyset.obj `if test -f 'keyset.c'; then $(CYGPATH_W) 'keyset.c'; else $(CYGPATH_W) '$(srcdir)/keyset.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-keyset.Tpo" "$(DEPDIR)/libelektra_a-keyset.Po"; else rm -f "$(DEPDIR)/libelektra_a-keyset.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='keyset.c' object='libelektra_a-keyset.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-keyset.obj `if test -f 'keyset.c'; then $(CYGPATH_W) 'keyset.c'; else $(CYGPATH_W) '$(srcdir)/keyset.c'; fi`

libelektra_a-kdbhighlevel.o: kdbhighlevel.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-kdbhighlevel.o -MD -MP -MF "$(DEPDIR)/libelektra_a-kdbhighlevel.Tpo" -c -o libelektra_a-kdbhighlevel.o `test -f 'kdbhighlevel.c' || echo '$(srcdir)/'`kdbhighlevel.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-kdbhighlevel.Tpo" "$(DEPDIR)/libelektra_a-kdbhighlevel.Po"; else rm -f "$(DEPDIR)/libelektra_a-kdbhighlevel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdbhighlevel.c' object='libelektra_a-kdbhighlevel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-kdbhighlevel.o `test -f 'kdbhighlevel.c' || echo '$(srcdir)/'`kdbhighlevel.c

libelektra_a-kdbhighlevel.obj: kdbhighlevel.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-kdbhighlevel.obj -MD -MP -MF "$(DEPDIR)/libelektra_a-kdbhighlevel.Tpo" -c -o libelektra_a-kdbhighlevel.obj `if test -f 'kdbhighlevel.c'; then $(CYGPATH_W) 'kdbhighlevel.c'; else $(CYGPATH_W) '$(srcdir)/kdbhighlevel.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-kdbhighlevel.Tpo" "$(DEPDIR)/libelektra_a-kdbhighlevel.Po"; else rm -f "$(DEPDIR)/libelektra_a-kdbhighlevel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdbhighlevel.c' object='libelektra_a-kdbhighlevel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-kdbhighlevel.obj `if test -f 'kdbhighlevel.c'; then $(CYGPATH_W) 'kdbhighlevel.c'; else $(CYGPATH_W) '$(srcdir)/kdbhighlevel.c'; fi`

libelektra_a-backendhelpers.o: backendhelpers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-backendhelpers.o -MD -MP -MF "$(DEPDIR)/libelektra_a-backendhelpers.Tpo" -c -o libelektra_a-backendhelpers.o `test -f 'backendhelpers.c' || echo '$(srcdir)/'`backendhelpers.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-backendhelpers.Tpo" "$(DEPDIR)/libelektra_a-backendhelpers.Po"; else rm -f "$(DEPDIR)/libelektra_a-backendhelpers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='backendhelpers.c' object='libelektra_a-backendhelpers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-backendhelpers.o `test -f 'backendhelpers.c' || echo '$(srcdir)/'`backendhelpers.c

libelektra_a-backendhelpers.obj: backendhelpers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-backendhelpers.obj -MD -MP -MF "$(DEPDIR)/libelektra_a-backendhelpers.Tpo" -c -o libelektra_a-backendhelpers.obj `if test -f 'backendhelpers.c'; then $(CYGPATH_W) 'backendhelpers.c'; else $(CYGPATH_W) '$(srcdir)/backendhelpers.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-backendhelpers.Tpo" "$(DEPDIR)/libelektra_a-backendhelpers.Po"; else rm -f "$(DEPDIR)/libelektra_a-backendhelpers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='backendhelpers.c' object='libelektra_a-backendhelpers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-backendhelpers.obj `if test -f 'backendhelpers.c'; then $(CYGPATH_W) 'backendhelpers.c'; else $(CYGPATH_W) '$(srcdir)/backendhelpers.c'; fi`

libelektra_a-exported_symbols.o: exported_symbols.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-exported_symbols.o -MD -MP -MF "$(DEPDIR)/libelektra_a-exported_symbols.Tpo" -c -o libelektra_a-exported_symbols.o `test -f 'exported_symbols.c' || echo '$(srcdir)/'`exported_symbols.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-exported_symbols.Tpo" "$(DEPDIR)/libelektra_a-exported_symbols.Po"; else rm -f "$(DEPDIR)/libelektra_a-exported_symbols.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exported_symbols.c' object='libelektra_a-exported_symbols.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-exported_symbols.o `test -f 'exported_symbols.c' || echo '$(srcdir)/'`exported_symbols.c

libelektra_a-exported_symbols.obj: exported_symbols.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -MT libelektra_a-exported_symbols.obj -MD -MP -MF "$(DEPDIR)/libelektra_a-exported_symbols.Tpo" -c -o libelektra_a-exported_symbols.obj `if test -f 'exported_symbols.c'; then $(CYGPATH_W) 'exported_symbols.c'; else $(CYGPATH_W) '$(srcdir)/exported_symbols.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_a-exported_symbols.Tpo" "$(DEPDIR)/libelektra_a-exported_symbols.Po"; else rm -f "$(DEPDIR)/libelektra_a-exported_symbols.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='exported_symbols.c' object='libelektra_a-exported_symbols.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_a_CFLAGS) $(CFLAGS) -c -o libelektra_a-exported_symbols.obj `if test -f 'exported_symbols.c'; then $(CYGPATH_W) 'exported_symbols.c'; else $(CYGPATH_W) '$(srcdir)/exported_symbols.c'; fi`

libelektra_la-kdb.lo: kdb.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -MT libelektra_la-kdb.lo -MD -MP -MF "$(DEPDIR)/libelektra_la-kdb.Tpo" -c -o libelektra_la-kdb.lo `test -f 'kdb.c' || echo '$(srcdir)/'`kdb.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_la-kdb.Tpo" "$(DEPDIR)/libelektra_la-kdb.Plo"; else rm -f "$(DEPDIR)/libelektra_la-kdb.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdb.c' object='libelektra_la-kdb.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -c -o libelektra_la-kdb.lo `test -f 'kdb.c' || echo '$(srcdir)/'`kdb.c

libelektra_la-error.lo: error.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -MT libelektra_la-error.lo -MD -MP -MF "$(DEPDIR)/libelektra_la-error.Tpo" -c -o libelektra_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_la-error.Tpo" "$(DEPDIR)/libelektra_la-error.Plo"; else rm -f "$(DEPDIR)/libelektra_la-error.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='error.c' object='libelektra_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -c -o libelektra_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libelektra_la-key.lo: key.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -MT libelektra_la-key.lo -MD -MP -MF "$(DEPDIR)/libelektra_la-key.Tpo" -c -o libelektra_la-key.lo `test -f 'key.c' || echo '$(srcdir)/'`key.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_la-key.Tpo" "$(DEPDIR)/libelektra_la-key.Plo"; else rm -f "$(DEPDIR)/libelektra_la-key.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='key.c' object='libelektra_la-key.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -c -o libelektra_la-key.lo `test -f 'key.c' || echo '$(srcdir)/'`key.c

libelektra_la-keyset.lo: keyset.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -MT libelektra_la-keyset.lo -MD -MP -MF "$(DEPDIR)/libelektra_la-keyset.Tpo" -c -o libelektra_la-keyset.lo `test -f 'keyset.c' || echo '$(srcdir)/'`keyset.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_la-keyset.Tpo" "$(DEPDIR)/libelektra_la-keyset.Plo"; else rm -f "$(DEPDIR)/libelektra_la-keyset.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='keyset.c' object='libelektra_la-keyset.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -c -o libelektra_la-keyset.lo `test -f 'keyset.c' || echo '$(srcdir)/'`keyset.c

libelektra_la-kdbhighlevel.lo: kdbhighlevel.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -MT libelektra_la-kdbhighlevel.lo -MD -MP -MF "$(DEPDIR)/libelektra_la-kdbhighlevel.Tpo" -c -o libelektra_la-kdbhighlevel.lo `test -f 'kdbhighlevel.c' || echo '$(srcdir)/'`kdbhighlevel.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_la-kdbhighlevel.Tpo" "$(DEPDIR)/libelektra_la-kdbhighlevel.Plo"; else rm -f "$(DEPDIR)/libelektra_la-kdbhighlevel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdbhighlevel.c' object='libelektra_la-kdbhighlevel.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -c -o libelektra_la-kdbhighlevel.lo `test -f 'kdbhighlevel.c' || echo '$(srcdir)/'`kdbhighlevel.c

libelektra_la-backendhelpers.lo: backendhelpers.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -MT libelektra_la-backendhelpers.lo -MD -MP -MF "$(DEPDIR)/libelektra_la-backendhelpers.Tpo" -c -o libelektra_la-backendhelpers.lo `test -f 'backendhelpers.c' || echo '$(srcdir)/'`backendhelpers.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libelektra_la-backendhelpers.Tpo" "$(DEPDIR)/libelektra_la-backendhelpers.Plo"; else rm -f "$(DEPDIR)/libelektra_la-backendhelpers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='backendhelpers.c' object='libelektra_la-backendhelpers.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelektra_la_CFLAGS) $(CFLAGS) -c -o libelektra_la-backendhelpers.lo `test -f 'backendhelpers.c' || echo '$(srcdir)/'`backendhelpers.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libLTLIBRARIES \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLIBRARIES install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libLTLIBRARIES clean-libtool \
	clean-local ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLIBRARIES \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLIBRARIES uninstall-libLTLIBRARIES


../include/kdbprivate.h:
	cd ../include && $(MAKE) kdbprivate.h

../libloader/libloader-static.a:
	cd ../libloader && $(MAKE) libloader-static.a

../libloader/libloader-dynamic.la:
	cd ../libloader && $(MAKE) libloader-dynamic.la

#../libelektratools/libelektratools.a:
#	cd ../libelektratools && $(MAKE) libelektratools.a

#all_backends:
#	cd ../backends && $(MAKE) all

../backends/filesys/libelektra-filesys.a:
	cd ../backends/filesys && $(MAKE) libelektra-filesys.a

../backends/ini/libelektra-ini.a:
	cd ../backends/ini && $(MAKE) libelektra-ini.a

../backends/fstab/libelektra-fstab.a:
	cd ../backends/fstab && $(MAKE) libelektra-fstab.a

../backends/daemon/libelektra-daemon.a:
	cd ../backends/daemon && $(MAKE) libelektra-daemon.a

../backends/berkeleydb/libelektra-berkeleydb.a:
	cd ../backends/berkeleydb && $(MAKE) libelektra-berkeleydb.a

../backends/gconf/libelektra-gconf.a:
	cd ../backends/gconf && $(MAKE) libelektra-gconf.a
# ../libelektratools/libelektratools.a

objects: $(object_deps)
	$(SHELL) exportobjects.sh $(object_deps)

exported_symbols.c: ../../config.status
	$(SHELL) $(srcdir)/exportsymbols.sh $(backends) $(elektratools)

#exported_symbols.c: all_backends ../libelektratools/libelektratools.a
#	@list='$(backends)'; for backend in $$list; do \
#	  bck_list=$$bck_list" ../backends/$$backend/libelektra-$$backend.a"; \
#	done; \
#	$(SHELL) exportsymbols.sh $$bck_list ../libelektratools/libelektratools.a
clean-local:
	-rm -f objects
	-rm -f exported_symbols.c
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
