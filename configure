#!/bin/sh

TARGET=oyranos
ERROR=0

CONF_H=config.h
CONF=makefile
CONF_SH=$TARGET-config
SPEC=$TARGET.spec
PKGC=$TARGET.pc
MPKG="$TARGET"_monitor.pc
VERS="$TARGET"_version.h

export CONF_H CONF

VERSION_A=0
VERSION_B=1
VERSION_C=5
RELEASE=0
VERSION=$VERSION_A.$VERSION_B.$VERSION_C
if [ $VERSION_A -gt 9 ]; then
  VERSION_L="$VERSION_A"
else
  VERSION_L="0$VERSION_A"
fi
if [ $VERSION_B -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_B"
else
  VERSION_L="${VERSION_L}0$VERSION_B"
fi
if [ $VERSION_C -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_C"
else
  VERSION_L="${VERSION_L}0$VERSION_C"
fi
VERSION_L=`echo $VERSION_L | sed s/^0*//g`
TIME="November 2004 - May 2006"

src_dir="`(cd ..;pwd)`/""$TARGET"_"$VERSION"
srcdir="`pwd`"

test -f error.txt && rm error.txt
test -f mkdepend && make clean


echo "# automatically generated file - do not edit" > $CONF
echo "/* automatically generated file - do not edit */" > $CONF_H
echo "" >> $CONF
echo "TARGET = $TARGET" >> $CONF

echo ""


# detect System

UNAME_=`uname`
OSUNAME=BSD
if [ $? = 0 ] && [ $UNAME_ = "Darwin" ]; then
  echo "Darwin PPC              detected"
  echo "APPLE = 1" >> $CONF
  echo "OSX_H = -DHAVE_OSX" >> $CONF
  OSUNAME=Darwin
else
  if [ $UNAME_ = "Linux" ]; then
    echo "LINUX = 1" >> $CONF
    echo "Linux system            detected"
    OSUNAME=Linux
  else
    if [ $UNAME_ = "SunOS" ]; then
      echo "SOLARIS = 1" >> $CONF
      echo "SunOS                   detected"
    else
      if [ $UNAME_ = "OpenBSD" ] || [ $UNAME_ = "NetBSD" ] || [ $UNAME_ = "FreeBSD" ]; then
        OSUNAME=BSD
        echo "BSD = 1" >> $CONF
        echo "#define BSD 1" >> $CONF_H
        echo "BSD $UNAME_             detected"
      else
        echo "Oyranos may or may not compile on your $UNAME_ system"
      fi
    fi
  fi
fi
MACH_=`uname -m`
MACH=BUILD_32
if [ $? = 0 ]; then
  if [ $MACH_ = "i686" ]; then
    echo "32-bit system           detected"
  else
    if [ $MACH_ = "x86_64" ]; then
      MACH=BUILD_64
      echo "BUILD_64 = 1" >> $CONF
      echo "X86_64                  will build in 64 bit mode"
    else
      if [ $MACH_ = "sun4u" ]; then
        MACH=BUILD_64
        echo "BUILD_64 = 1" >> $CONF
        echo "spark ultra 4           will build in 64 bit mode"
      fi
    fi
  fi
fi

if [ $MACH = "BUILD_64" ]; then
  BARCH="64"
  LINE_ARCH="-64"
else
  BARCH=""
  LINE_ARCH=""
fi
LIBDIR="lib"$BARCH
export LIBDIR BARCH

if [ $# -gt 0 ]; then
  prefix=""
  while [ $# -gt 0 ]; do
    if [ "${1%--prefix=*}" != "$1" ]; then
      teste="${1#--prefix=*}"
      #echo "test: $teste $1"
    fi
    if [ "$teste" != "" ]; then
      prefix="$teste"
    fi
    shift
  done
else
  if [ $UNAME_ = "Darwin" ]; then
    prefix=/opt/local
  else
    prefix=/usr/local
  fi
fi



# detect Libraries

echo "LIB=/"$LIBDIR >> $CONF


FLTK_=`fltk-config --cxxflags 2>>error.txt`
if [ $? = 0 ] && [ -n "$FLTK_" ]; then
  FLTK=1
  echo "FLTK `fltk-config --version`              detected"
  echo "#define HAVE_FLTK 1" >> $CONF_H
  echo "FLTK = 1" >> $CONF
  echo "FLTK_H = -DHAVE_FLTK `fltk-config --cxxflags`" >> $CONF
  echo "FLTK_LIBS = `fltk-config --use-images --ldflags`" >> $CONF
else
  echo "FLTK is not found; you optionally can download at: www.fltk.org"
fi


FLU_=`flu-config --cxxflags 2>>error.txt`
if [ $? = 0 ] && [ -n "$FLU_" ] && [ -n "$FLTK_" ]; then
  echo "FLU                     detected"
  echo "#define HAVE_FLU 1" >> $CONF_H
  echo "FLU = 1" >> $CONF
  echo "FLU_H = -DHAVE_FLU `flu-config --cxxflags`" >> $CONF
  echo "FLU_LIBS = `flu-config --ldflags`" >> $CONF
else
  echo "no FLU found, will not use it"
fi

if [ "$FLTK" = 1 ]; then
  echo "FLTK_GUI = $TARGET-config-fltk" >> $CONF
fi
if [ "$FLU" = 1 ]; then
  echo "FLU_GUI = $TARGET-config-flu" >> $CONF
fi


export ELEKTRA=1
#export OYRANOS=1
export LCMS=1
export LIBPNG=2
#export FTGL=1
#export FLTK=1
#export FLU=2
export X11=1
export XINERAMA=1
export XF86VMODE=1
export DOXYGEN=2
./configure.sh
if [ $? -gt 0 ]; then
  ERROR=1
fi




# Alle ifdefs landen hier

echo "" >> $CONF
echo "VERSION_A = $VERSION_A" >> $CONF
echo "VERSION_B = $VERSION_B" >> $CONF
echo "VERSION_C = $VERSION_C" >> $CONF
echo "VERSION   = $VERSION" >> $CONF
echo "VERSION_L = $VERSION_L" >> $CONF
echo "" >> $CONF
echo "src_dir = $src_dir" >> $CONF
echo "srcdir = $srcdir" >> $CONF
srcdir="`pwd`"

echo "#!/bin/sh" > $CONF_SH
echo "" >> $CONF_SH
echo "TARGET=$TARGET" >> $CONF_SH
echo "" >> $CONF_SH
echo "VERSION_A=$VERSION_A" >> $CONF_SH
echo "VERSION_B=$VERSION_B" >> $CONF_SH
echo "VERSION_C=$VERSION_C" >> $CONF_SH
echo "" >> $CONF_SH
echo "prefix=$prefix" >> $CONF_SH
echo "libdir=$prefix/$LIBDIR" >> $CONF_SH
cat  "$CONF_SH.in" >> $CONF_SH
chmod 0755 "$CONF_SH"
echo "$CONF_SH created"


echo "#ifndef OYRANOS_VERSION_H" > $VERS
echo "#define OYRANOS_VERSION_H" >> $VERS
echo "" >> $VERS
echo "#define OYRANOS_VERSION_A $VERSION_A" >> $VERS
echo "#define OYRANOS_VERSION_B $VERSION_B" >> $VERS
echo "#define OYRANOS_VERSION_C $VERSION_C" >> $VERS
echo "#define OYRANOS_VERSION_NAME $VERSION" >> $VERS
echo "#define OYRANOS_VERSION $VERSION_L" >> $VERS
echo "#define OYRANOS_DATE _(\"$TIME\")" >> $VERS
echo "" >> $VERS
echo "#endif /*OYRANOS_VERSION_H*/" >> $VERS

echo "Version: $VERSION" > $SPEC
echo "Source:  $TARGET"-"$VERSION".tar.gz >> $SPEC
echo "Release: $RELEASE" >> $SPEC
cat  $SPEC.in >> $SPEC
echo $SPEC generated

echo "Version: $VERSION" > $MPKG
echo "prefix=$prefix" >> $MPKG
echo "exec_prefix=\${prefix}" >> $MPKG
echo "libdir=\${exec_prefix}/$LIBDIR" >> $MPKG
cat  $MPKG.in >> $MPKG
echo $MPKG generated

echo "Version: $VERSION" > $PKGC
echo "prefix=$prefix" >> $PKGC
echo "exec_prefix=\${prefix}" >> $PKGC
echo "libdir=\${exec_prefix}/$LIBDIR" >> $PKGC
cat  $PKGC.in >> $PKGC
echo $PKGC generated


echo "prefix =                $prefix"

echo "prefix = $prefix" >> $CONF
echo "libdir = \${prefix}/lib$BARCH" >> $CONF
echo "src_dir = $src_dir" >> $CONF
echo "srcdir = $srcdir" >> $CONF
echo "" >> $CONF
echo "#define PREFIX         \"$prefix\"" >> $CONF_H
echo "#define DATADIR        \"$prefix/share/\"" >> $CONF_H
echo "#define LOCALEDIR      \"$prefix/share/locale\"" >> $CONF_H
echo "#define SRCDIR         \"$srcdir\"" >> $CONF_H
echo "#define SRC_LOCALEDIR  \"$srcdir/po\"" >> $CONF_H

echo "" >> $CONF

echo "CXX = c++$LINE_ARCH" >> $CONF
echo "CC = cc$LINE_ARCH" >> $CONF
echo "RM = rm -vf" >> $CONF
if [ $OSUNAME = "Darwin" ]; then
  echo "COPY = cp -pv" >> $CONF
  echo "LINK_FLAGS = -dynamiclib" >> $CONF
  echo "MAKEDEPEND	= /usr/X11R6/bin/makedepend -Y" >> $CONF
  echo "OPTS=-Wall -O2 -g -fPIC -L." >> $CONF
  echo "/Developer/Tools/Rez -t APPL mac.r -o \$@" >> $CONF
else
  echo "SO = .so" >> $CONF
  if [ $OSUNAME = "Linux" ]; then
    echo "COPY = cp -vdpa" >> $CONF
    echo "LINK_FLAGS = -shared -ldl -fPIC -L." >> $CONF
    echo "LINK_FLAGS_STATIC = q" >> $CONF
    echo "LINK_NAME = -Wl,-soname -Wl,\$(LIBSONAMEFULL)" >> $CONF
    echo "LINK_NAME_M = -Wl,-soname -Wl,\$(LIB_MONI_SONAMEFULL)" >> $CONF
    echo "LINK_LIB_PATH = -Wl,--rpath -Wl,\$(libdir)" >> $CONF
    echo "LINK_SRC_PATH = -Wl,--rpath -Wl,\$(srcdir)" >> $CONF
    echo "MAKEDEPEND	= makedepend -Y" >> $CONF
    echo "OPTS=-Wall -g -fPIC #-O2" >> $CONF
  else
    echo "COPY = cp -p" >> $CONF
    if [ $OSUNAME = "BSD" ]; then
      echo "LINK_FLAGS = -shared \$(ICONV)" >> $CONF
    else
      echo "LINK_FLAGS = -shared -ldl \$(ICONV)" >> $CONF
    fi
    echo "MAKEDEPEND	= makedepend -Y" >> $CONF
    echo "OPTS=-Wall -O2 -g -fpic -L." >> $CONF
    echo "RM = rm -f" >> $CONF
  fi
fi

echo "LIB=/"$LIBDIR >> $CONF

# get time stamp
C=`date +%C`
TIME=`date +%Y%m%e.%H%M%S | sed s/$C//`
echo "MTIME   =$TIME" >> $CONF

echo "" >> $CONF
echo "" >> $CONF


if [ $OSUNAME = "BSD" ]; then
  cat  makefile.in | sed 's/^\#if/.if/g ; s/^\#end/.end/g ; s/^\#include\ mkdepend/.include "mkdepend"/g'  >> $CONF
else
  cat  makefile.in | sed 's/^\#if/if/g ; s/^\#end/end/g ; s/^\#include/include/g'  >> $CONF
fi
echo $CONF generated
echo ""
echo ""

if [ $ERROR != 0 ]; then
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo "!!!                     An ERROR occured                     !!!"
  echo "!!!                     See Log above                        !!!"
  echo "!!!                     remove  $CONF                     !!!"
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo ""
  rm $CONF $CONF_H $CONF_SH $SPEC $PKGC $MPKG
  exit
fi

echo "" > mkdepend

if [ `cat error.txt | wc -l` -lt 1 ]; then
  rm error.txt
fi


