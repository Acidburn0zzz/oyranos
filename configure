#!/bin/sh

TARGET=oyranos
TARGET_NAME=Oyranos
ERROR=0

CONF_H=config.h
CONF=makefile
CONF_SH=$TARGET-config
CONF_NV=libXNVCtrl/makefile
CONF_TEMP_SH=config.tmp.sh
CONF_LOG=config.log
CONF_I18N=fl_i18n/makefile
SPEC=$TARGET.spec
SPECICC=$TARGET-icc.spec
PKGC=$TARGET.pc
MPKG="$TARGET"_monitor.pc
VERS_H="$TARGET"_version.h
zeile="$0 $@"
if [ -f standard_profiles/eci/makefile.in ]; then
  ECI_CONF=standard_profiles/eci/makefile
  BASE_CONF=standard_profiles/base/makefile
  PROFILE_DIR="standard_profiles/eci standard_profiles/base"
else
  ECI_CONF=error.txt
  BASE_CONF=error.txt
fi
MAKEFILE_DIR=". fl_i18n libXNVCtrl $PROFILE_DIR"; export MAKEFILE_DIR

export CONF_H CONF CONF_SH CONF_LOG CONF_I18N CONF_TEMP_SH CONF_NV

test -f error.tmp && rm error.tmp
test -f $CONF_TEMP_SH && rm $CONF_TEMP_SH
test -f $CONF_LOG && rm $CONF_LOG

VERSION_A=0
VERSION_B=1
VERSION_C=8
VERSION_ABI_A=1
VERSION_ABI_B=0
RELEASE=0
TIME="November 2004 - December 2007"
VERSION=$VERSION_A.$VERSION_B.$VERSION_C
if [ $VERSION_A -gt 9 ]; then
  VERSION_L="$VERSION_A"
else
  VERSION_L="0$VERSION_A"
fi
if [ $VERSION_B -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_B"
else
  VERSION_L="${VERSION_L}0$VERSION_B"
fi
if [ $VERSION_C -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_C"
else
  VERSION_L="${VERSION_L}0$VERSION_C"
fi
VERSION_L=`echo $VERSION_L | sed 's/^0*//g'`

INFOECHO="echo"


debug=0
nodeps=0
rpm=0
verbose=1
X11=0

# find a suitable fltk-config script
fltkconfig="fltk-config"
old_IFS=$IFS;
IFS=:
for i in $PATH; do
  test -x "$i/$fltkconfig" && fltkconfig_="$i/$fltkconfig"
done
if [ -z "$fltkconfig_" ]; then
  for i in $PATH; do
    test -x "$i/fltk-utf8-config" && fltkconfig_="$i/fltk-utf8-config"
  done
fi
if [ -n "$fltkconfig_" ]; then
  fltkconfig="$fltkconfig_"
fi
IFS=$old_IFS

STRIPOPT="sed s/-O.//"

if [ $# -gt 0 ]; then
  prefix=""
  while [ $# -gt 0 ]; do
    arg=$1
    # prefix exec_prefix bindir sbindir libdir includedir datadir mandir
    switch=prefix
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      prefix="`echo \"$1\" | sed s/\"--$switch=\"//`"
    fi
    switch="exec-prefix"
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      exec_prefix="`echo $1 | sed s/--$switch=//`"
    fi
    switch=bindir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      bindir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=sbindir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      sbindir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=libdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      libdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=includedir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      includedir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=datadir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      datadir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=mandir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      mandir="`echo $1 | sed s/--$switch=//`"
    fi
    # syscolordir usercolordir iccdirname settingsdirname pixmapdir desktopdir
    switch=syscolordir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      syscolordir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=usercolordir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      usercolordir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=iccdirname
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      iccdirname="`echo $1 | sed s/--$switch=//`"
    fi
    switch=settingsdirname
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      settingsdirname="`echo $1 | sed s/--$switch=//`"
    fi
    switch=pixmapdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      pixmapdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=desktopdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      desktopdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=with-fltk-config
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      fltkconfig="`echo $1 | sed s/--$switch=//`"
    fi
    switch=with-x
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      X11=2
    fi
    switch=with-rpath
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      rpath=1
    fi
    switch=rpm-only
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      rpm="1"
    fi
    switch=quick
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      quick="1"
    fi
    switch=enable-debug
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      debug="1"
    fi
    switch=enable-verbose
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      verbose="1"
    fi
    switch=disable-verbose
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      verbose="0"
    fi
    switch=disable-dependency-tracking
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      nodeps="1"
    fi
    switch=help
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
test -n "$INFOECHO" && $INFOECHO "Usage:"
test -n "$INFOECHO" && $INFOECHO "   --prefix=[/usr/local]                package prefix"
test -n "$INFOECHO" && $INFOECHO "   --exec-prefix=[\$prefix]              package exec-prefix"
test -n "$INFOECHO" && $INFOECHO "   --bindir=[\$exec-prefix/bin]          binary installation path"
test -n "$INFOECHO" && $INFOECHO "   --sbindir=[\$exec-prefix/sbin]        super user binary installation path"
test -n "$INFOECHO" && $INFOECHO "   --libdir=[\$exec-prefix/lib]          library installation path"
test -n "$INFOECHO" && $INFOECHO "   --includedir=[\$prefix/include]       include file installation"
test -n "$INFOECHO" && $INFOECHO "   --datadir=[\$prefix/data]             application data base path"
test -n "$INFOECHO" && $INFOECHO "   --mandir=[\$datadir/man]              manual installation path"
test -n "$INFOECHO" && $INFOECHO "   --syscolordir=[\$datadir/color]       Oyranos system color path"
test -n "$INFOECHO" && $INFOECHO "   --usercolordir=[~/.color]            Oyranos user color path"
test -n "$INFOECHO" && $INFOECHO "   --iccdirname=[icc]                   Oyranos ICC profile directory"
test -n "$INFOECHO" && $INFOECHO "   --settingsdirname=[settings]         Oyranos settings directory"
test -n "$INFOECHO" && $INFOECHO "   --pixmapdir=[\$datadir/pixmaps]       icon installation path"
test -n "$INFOECHO" && $INFOECHO "   --desktopdir=[\$datadir/applications] xdg installation path"
test -n "$INFOECHO" && $INFOECHO ""
test -n "$INFOECHO" && $INFOECHO "   --with-fltk-config=[fltk-config]     alternative fltk version"
test -n "$INFOECHO" && $INFOECHO "   --with-x                             use X11 on Darwin"
test -n "$INFOECHO" && $INFOECHO "   --with-rpath                         use rpath for ELF linking"
test -n "$INFOECHO" && $INFOECHO "   --rpm-only                           generate only rpm spec file"
test -n "$INFOECHO" && $INFOECHO "   --enable-debug                       debug version [default disable]"
test -n "$INFOECHO" && $INFOECHO "   --enable-verbose                     verbose compiling [default enable]"
test -n "$INFOECHO" && $INFOECHO "   --disable-verbose                    verbose compiling [default enable]"
test -n "$INFOECHO" && $INFOECHO "   --disable-dependency-tracking        no dependencies [default check]"

test -n "$INFOECHO" && $INFOECHO "   --quick                              generate config files only"
test -n "$INFOECHO" && $INFOECHO "   --help"
test -n "$INFOECHO" && $INFOECHO ""
test -n "$INFOECHO" && $INFOECHO " Optionally set the CC, CXX, CFLAGS, CXXFLAGS and LDFLAGS environment variables."
test -n "$INFOECHO" && $INFOECHO ""
      exit
    fi
    shift
  done
fi

# RPM spec file generation
if [ 0 -eq $rpm ]; then
  ECHO="echo"
  RPMECHO="echo"
  echo -e "$zeile \$@\n\nexit 0\n\n" > $CONF_LOG
  chmod 0755 $CONF_LOG
else
  ECHO=""
  RPMECHO="echo"
fi
export ECHO

time="`date +%y%m%d.%H%M%S`"

if [ -n "$ECHO" ]; then
  echo_="";
  $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="################################################################"
  $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="#                                                              #"
  $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="        Welcome to $TARGET_NAME Version $VERSION configurator"
  $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="#                       $time                          #"
  $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="#                       Configuration                          #"
  $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
fi

test -n "$ECHO" && $ECHO "" > $CONF
test -n "$ECHO" && $ECHO "" > $CONF_H
test -n "$ECHO" && $ECHO "" > $CONF_I18N
test -n "$ECHO" && $ECHO "" > $CONF_NV
test -n "$ECHO" && $ECHO "" > $ECI_CONF
test -n "$ECHO" && $ECHO "" > $BASE_CONF
test -n "$ECHO" && $ECHO "" > $PKGC
test -n "$ECHO" && $ECHO "" > $MPKG
test -n "$RPMECHO" && $RPMECHO "" > $SPEC
test -n "$RPMECHO" && $RPMECHO "" > $SPECICC


src_dir="`(cd ..;pwd)`/""$TARGET"_"$VERSION"
srcdir="`pwd`"

#prefix
if [ -z "$prefix" ]; then
  prefix=/usr/local
fi

# define some common variables in front of config.site
if [ -n "$CXX" ]; then
  CXX_saved=$CXX
fi
if [ -n "$CC" ]; then
  CC_saved=$CC
fi
if [ -n "$CFLAGS" ]; then
  CFLAGS_saved=$CFLAGS
  CFLAGS=""
fi
if [ -n "$CXXFLAGS" ]; then
  CXXFLAGS_saved=$CXXFLAGS
  CXXFLAGS=""
fi
if [ -n "$LDFLAGS" ]; then
  LDFLAGS_saved=$LDFLAGS
  LDFLAGS=""
fi

# import config.site
if [ -z "$datadir" ]; then
  if [ -f $prefix/share/config.site ]; then
    . $prefix/share/config.site
    (. $prefix/share/config.site >> $CONF_LOG )
  fi
else
  if [ -f $datadir/config.site ]; then
    . $datadir/config.site
    (. $datadir/config.site >> $CONF_LOG )
  fi
fi

# recover variables after config.site
if [ -n "$CXX_saved" ]; then
  CXX="$CXX_saved"
fi
if [ -n "$CC_saved" ]; then
  CC="$CC_saved"
fi
if [ -n "$CFLAGS_saved" ]; then
  CFLAGS="$CFLAGS_saved $CFLAGS"
fi
if [ -n "$CXXFLAGS_saved" ]; then
  CXXFLAGS="$CXXFLAGS_saved $CXXFLAGS"
fi
if [ -n "$LDFLAGS_saved" ]; then
  LDFLAGS="$LDFLAGS_saved $LDFLAGS"
fi

if [ -n "$ECHO" ]; then
  test -f mkdepend && rm mkdepend config.h
fi


test -n "$ECHO" && $ECHO "# automatically generated file - do not edit" >> $CONF
test -n "$ECHO" && $ECHO "/* automatically generated file - do not edit */" >> $CONF_H
test -n "$ECHO" && $ECHO "/* automatically generated file - do not edit */" > $VERS_H
test -n "$ECHO" && $ECHO "" >> $CONF_H
test -n "$ECHO" && $ECHO "#ifndef OY_CONFIG_H" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_CONFIG_H" >> $CONF_H
test -n "$ECHO" && $ECHO "" >> $CONF_H
test -n "$ECHO" && $ECHO "#define oyIGNORE_DEPRECATED OYRANOS_VERSION" >> $CONF_H
test -n "$ECHO" && $ECHO "" >> $CONF_H

test -n "$ECHO" && $ECHO "" >> $CONF
test -n "$ECHO" && $ECHO "TARGET = $TARGET" >> $CONF

if [ -n "$ECHO" ]; then
  echo_="#                                                              #"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
fi


# detect System

UNAME_=`uname`
OSUNAME=BSD
if [ $? = 0 ] && [ $UNAME_ = "Darwin" ]; then
  arch=`uname -p`
  version=`uname -r`
  echo_="Darwin $arch $version   detected";
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  test -n "$ECHO" && $ECHO "APPLE = 1" >> $CONF
  test -n "$ECHO" && $ECHO "APPLE = 1" >> $CONF_I18N
  test -n "$ECHO" && $ECHO "OSX_H = -DHAVE_OSX" >> $CONF
  test -n "$ECHO" && $ECHO "#define APPLE 1" >> $CONF_H
  OSUNAME=Darwin
else
  if [ $UNAME_ = "Linux" ]; then
    test -n "$ECHO" && $ECHO "LINUX = 1" >> $CONF
    test -n "$ECHO" && $ECHO "LINUX = 1" >> $CONF_I18N
    test -n "$ECHO" && $ECHO "#define LINUX 1" >> $CONF_H
    echo_="Linux system            detected"
    test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
    SYS=0
    if [ -f /etc/SuSE-release ]; then
      if [ `cat /etc/SuSE-release | grep Linux | wc -l` -ne 0 ]; then
        echo_="`cat /etc/SuSE-release | grep Linux`"
        test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
        SYS=1; fi
      if [ $SYS -eq 0 ]; then
        echo_="`cat /etc/SuSE-release | grep SUSE`"
        test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
        SYS=1; fi fi
    if [ -f /etc/redhat-release ]; then
      echo_="`cat /etc/redhat-release`"
      test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
      SYS=1; fi
    if [ -f /etc/debian_version ]; then
      if [ -f /etc/issue.net ]; then
        echo_="`cat /etc/issue.net || cat /etc/debian_version`"
        test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
        SYS=2; fi; fi
    if [ $SYS -eq 0 ]; then
      if [ -f /etc/issue.net ]; then
        echo_="`cat /etc/issue.net`"
        test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
    fi; fi
    OSUNAME=Linux
  else
    if [ $UNAME_ = "SunOS" ]; then
      test -n "$ECHO" && $ECHO "SOLARIS = 1" >> $CONF
      test -n "$ECHO" && $ECHO "SOLARIS = 1" >> $CONF_I18N
      test -n "$ECHO" && $ECHO "#define SOLARIS 1" >> $CONF_H
      echo_="SunOS                   detected"
      test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
      OSUNAME=SunOS
    else
      if [ $UNAME_ = "OpenBSD" ] || [ $UNAME_ = "NetBSD" ] || [ $UNAME_ = "FreeBSD" ]; then
        test -n "$ECHO" && $ECHO "BSD = 1" >> $CONF
        test -n "$ECHO" && $ECHO "BSD = 1" >> $CONF_I18N
        OS_EXT=.bsd
        test -n "$ECHO" && $ECHO "#define BSD 1" >> $CONF_H
        echo_="BSD $UNAME_             detected"
        test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
        OSUNAME=BSD
      else
        echo_="Oyranos may or may not compile on your $UNAME_ system"
        test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
      fi
    fi
  fi
fi
OS_EXT=""
test -n "$ECHO" && $ECHO "MAKEFILE_ARCH = Makefile$OS_EXT"  >> $CONF
MACH_=`uname -m`
MACH=BUILD_32
BARCH=""
LINE_ARCH=""
if [ $? = 0 ]; then
  if [ "$MACH_" = "i686" ]; then
    echo_="32-bit system           detected"
    test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  else
    if [ "$MACH_" = "x86_64" ]; then
      MACH=BUILD_64
      test -n "$ECHO" && $ECHO "BUILD_64 = 1" >> $CONF
      echo_="X86_64                  will build in 64 bit mode"
      test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
      BARCH="64"
    else
      if [ "$MACH_" = "sun4u" ]; then
        MACH=BUILD_64
        test -n "$ECHO" && $ECHO "BUILD_64 = 1" >> $CONF
        echo_="spark ultra 4           will build in 64 bit mode"
        test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
        BARCH="64"
        LINE_ARCH="-64"
      fi
    fi
  fi
fi
LIBDIR="lib"$BARCH
export MACH OSUNAME LIBDIR BARCH LINE_ARCH


# exec_prefix bindir sbindir libdir includedir datadir
if [ -z "$exec_prefix" ]; then
  exec_prefix="$prefix"
fi
if [ "`echo $exec_prefix | grep 64 | wc -l`" -eq "1" ]; then
  BARCH=""
  LIBDIR="lib"
  echo_="unset BARCH LIBDIR"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  export BARCH LIBDIR
fi
test -n "$ECHO" && $ECHO "BARCH=$BARCH" >> $CONF

if [ -z "$bindir" ]; then
  bindir="$exec_prefix/bin"
fi
if [ -z "$sbindir" ]; then
  sbindir="$exec_prefix/sbin"
fi
if [ -z "$libdir" ]; then
  libdir="$exec_prefix/$LIBDIR"
fi
if [ -z "$cmmdir" ]; then
  cmmdir="$libdir/color/cmms"
fi
if [ -z "$includedir" ]; then
  includedir="$prefix/include"
fi
if [ -z "$datadir" ]; then
  datadir="$prefix/share"
fi
if [ -z "$mandir" ]; then
  mandir="$datadir/man"
fi
# syscolordir usercolordir iccdirname settingsdirname pixmapdir desktopdir
if [ -z "$syscolordir" ]; then
  syscolordir="$datadir/color"
fi
if [ -z "$usercolordir" ]; then
  usercolordir="~/.color"
fi
if [ -z "$iccdirname" ]; then
  iccdirname="icc"
fi
if [ -z "$settingsdirname" ]; then
  settingsdirname="settings"
fi
if [ -z "$pixmapdir" ]; then
  pixmapdir="$datadir/pixmaps"
fi
if [ -z "$desktopdir" ]; then
  desktopdir="$datadir/applications"
fi
export prefix exec_prefix bindir sbindir libdir includedir datadir mandir
export syscolordir usercolordir pixmapdir desktopdir
export debug verbose fltkconfig

PATH=$bindir:$PATH
export PATH

if [ -z "$CC" ]; then
  CC=cc$LINE_ARCH
fi
if [ -z "$CXX" ]; then
  CXX=c++$LINE_ARCH
fi

test -n "$ECHO" && $ECHO "CXX = $CXX" >> $CONF
test -n "$ECHO" && $ECHO "CC = $CC" >> $CONF
test -n "$ECHO" && $ECHO "CXX = $CXX" >> $CONF_I18N
test -n "$ECHO" && $ECHO "CC = $CC" >> $CONF_I18N
test -n "$ECHO" && $ECHO "CXX = $CXX" >> $CONF_NV
test -n "$ECHO" && $ECHO "CC = $CC" >> $CONF_NV
export CC CXX

CFLAGS_COMMON="`echo $CFLAGS_COMMON | $STRIPOPT` \$(DEBUG) \$(INCL)"
CXXFLAGS_COMMON="`echo $CXXFLAGS_COMMON | $STRIPOPT` \$(DEBUG) \$(INCL) \$(FLTK_H)"
CFLAGS="`echo $CFLAGS | $STRIPOPT`"
CXXFLAGS="`echo $CXXFLAGS | $STRIPOPT`"

if [ -z "$LDFLAGS" ]; then
  LDFLAGS="-L./ -L$libdir"
else
  LDFLAGS="`echo $LDFLAGS | $STRIPOPT` -L./ -L$libdir"
fi


# detect Libraries

test -n "$ECHO" && $ECHO "LIB=/"$LIBDIR >> $CONF

PATH=$PATH:/usr/X11R6/bin; export PATH
FLTK_=`$fltkconfig --cxxflags 2>>$CONF_LOG`
if [ $? = 0 ] && [ -n "$FLTK_" ]; then
  FLTK=1
fi


if [ "$FLTK" = 1 ]; then
  test -n "$ECHO" && $ECHO "FLTK_GUI = $TARGET-config-fltk" >> $CONF
  if [ `$fltkconfig --version` = "1.1.7" ]; then
    echo -e "\c "
  fi
fi

  elektra_mod=`pkg-config --modversion elektra`
  elektra_min="0.7"
  elektra_max="0.7.100"

    pkg-config  --atleast-version=$elektra_min elektra 2>>$CONF_LOG
    if [ $? = 0 ]; then
      pkg-config --max-version=$elektra_max elektra 2>>$CONF_LOG
    fi

if [ $nodeps -eq 1 ]; then
  GCC_MM="echo \"\#disable dependency tracking\""
  nodeps_config_opt=--disable-dependency-tracking
else
  GCC_MM="cc -MM"
fi

OYAPI="#define OYAPI"
OYEXPORT="#define OYEXPORT"

# set some compiler and linker options

test -n "$ECHO" && $ECHO "RM = rm -vf" >> $CONF
test -n "$ECHO" && $ECHO "RM = rm -vf" >> $CONF_NV
test -n "$ECHO" && $ECHO "MAKEDEPEND	= $GCC_MM" >> $CONF
if [ $OSUNAME = "Darwin" ]; then
  test -n "$ECHO" && $ECHO "LIBEXT = .dylib" >> $CONF
  GCC_VERSION_INFO="-Wl,-compatibility_version -Wl,$VERSION_ABI_A -Wl,-current_version -Wl,$VERSION_ABI_A.$VERSION_ABI_B"
  test -n "$ECHO" && $ECHO "LINK_FLAGS_DYNAMIC = $LDFLAGS -framework Carbon -dynamiclib  $GCC_VERSION_INFO -install_name " >> $CONF
  test -n "$ECHO" && $ECHO "COPY = cp -pv" >> $CONF
  LDFLAGS="$LDFLAGS -L."
  test -n "$ECHO" && $ECHO "MSGMERGE = msgmerge" >> $CONF
  CFLAGS="$CFLAGS -DPIC -Wunused -fno-exceptions -flat_namespace -undefined suppress"
  CXXFLAGS="$CXXFLAGS -DPIC -Wunused -fno-exceptions -flat_namespace -undefined suppress"
  test -n "$ECHO" && $ECHO "REZ = $fltkconfig --post \$@" >> $CONF
  test -n "$ECHO" && $ECHO "I18N_LIB = \$(iconv) \$(intl) \$(LIBNAMEV)" >> $CONF
  test -n "$ECHO" && $ECHO "I18N_LIBSTAT = \$(iconv) \$(intl) \$(LIBNAMEV)" >> $CONF
  INSTALL="install -p $DEBUG_SWITCH"
  oyranos_add="-framework ApplicationServices \$ltdl"
  oyranos_x_add=""
else
  test -n "$ECHO" && $ECHO "SO = .so" >> $CONF
  test -n "$ECHO" && $ECHO "LINK_FLAGS_DYNAMIC = $LDFLAGS -shared $GCC_VERSION_INFO -Wl,-soname -Wl," >> $CONF
  test -n "$ECHO" && $ECHO "MSGMERGE = msgmerge" >> $CONF
  test -n "$ECHO" && $ECHO "MSGMERG_OPTS = --update" >> $CONF
  test -n "$ECHO" && $ECHO "XGETTEXT_OPTIONS = --keyword=gettext --flag=gettext:1:pass-c-format \
        --keyword=_ --flag=_:1:pass-c-format \
        --keyword=N_ --flag=N_:1:pass-c-format \
        --copyright-holder='Kai-Uwe Behrmann' \
        --msgid-bugs-address='ku.b@gmx.de' \
        --from-code=utf-8" >> $CONF
  oyranos_add="\$ltdl"
  oyranos_x_add="\$X11_LIB_PATH \$X11 \$Xext \$Xinerama"
  if [ $OSUNAME = "Linux" ]; then
    test -n "$ECHO" && $ECHO "COPY = cp -vdpa" >> $CONF
    LDFLAGS="$LDFLAGS -L."
    test -n "$ECHO" && $ECHO "LINK_FLAGS_STATIC =" >> $CONF
    if [ -n "$rpath" ]; then 
      test -n "$ECHO" && $ECHO "LINK_LIB_PATH = -Wl,--rpath -Wl,\$(libdir)" >> $CONF
      test -n "$ECHO" && $ECHO "LINK_SRC_PATH = -Wl,--rpath -Wl,\$(srcdir)" >> $CONF
    fi
    CFLAGS="$CFLAGS -fPIC -DPIC"
    CXXFLAGS="$CXXFLAGS -fPIC -DPIC"
    INSTALL="install -p $DEBUG_SWITCH"
  else
    test -n "$ECHO" && $ECHO "COPY = cp -p" >> $CONF
    if [ $OSUNAME = "BSD" ]; then
      LDFLAGS="$LDFLAGS"
      if [ -n "$rpath" ]; then 
        test -n "$ECHO" && $ECHO "LINK_LIB_PATH = -Wl,--rpath -Wl,\$(libdir)" >> $CONF
        test -n "$ECHO" && $ECHO "LINK_SRC_PATH = -Wl,--rpath -Wl,\$(srcdir)" >> $CONF
      fi
      INSTALL="install -p $DEBUG_SWITCH"
    fi
    if [ $OSUNAME = "SunOS" ]; then
      LDFLAGS="$LDFLAGS -mimpure-text"
      INSTALL="install"
    else
      LDFLAGS="$LDFLAGS"
      INSTALL="install -p"
    fi
    test -n "$ECHO" && $ECHO "I18N_LIB = \$(iconv) \$(intl) \$(LIBNAMEV)" >> $CONF
    test -n "$ECHO" && $ECHO "I18N_LIBSTAT = \$(iconv) \$(intl) \$(LIBNAMEV)" >> $CONF
    CFLAGS="$CFLAGS -fPIC"
    CXXFLAGS="$CXXFLAGS -fPIC"
    test -n "$ECHO" && $ECHO "RM = rm -f" >> $CONF
    test -n "$ECHO" && $ECHO "RM = rm -f" >> $CONF_NV
  fi
fi

# export
for i in CFLAGS CXXFLAGS LDFLAGS; do
  if [ -n "$i" ]; then
    export $i
    #test -n "$INFOECHO" && $INFOECHO export $i
  else
    unset $i
  fi
done
if [ -n "$ECHO" ]; then
  echo_="\"$CFLAGS\" \"$CXXFLAGS\" \"$LDFLAGS\""
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
fi

test -n "$ECHO" && $ECHO "#!/bin/sh" > $CONF_SH
test -n "$ECHO" && $ECHO "" >> $CONF_SH

test -n "$INFOECHO" && $INFOECHO ""

# tell about required libs
LIBS_TEST="ltdl dl iconv intl m"; export LIBS_TEST
X_ADD_2="X11 Xext Xinerama Xxf86vm"; export X_ADD_2

# detect external libs and headers
if [ -n "$ECHO" ]; then
  ECHO="echo"; export ECHO
  LIBS=1; export LIBS
  ELEKTRA=1; export ELEKTRA
  #OYRANOS=1; export OYRANOS
  LCMS=1; export LCMS
  LIBPNG=2; export LIBPNG
  LIBTIFF=2; export LIBTIFF
  LIBOPENEXR=2; export LIBOPENEXR
  #FTGL=1; export FTGL
  FLTK=2; export FLTK
if [ $OSUNAME != "Darwin" ] ; then
  X11=2; 
fi
  export X11
  XINERAMA=2; export XINERAMA
  XF86VMODE=2; export XF86VMODE
  DOXYGEN=2; export DOXYGEN
  DEBUG=1; export DEBUG
  PO=1; export PO
  GETTEXT=2; export GETTEXT
  ./configure.sh
  LIBS=0; export LIBS
  ELEKTRA=0; export ELEKTRA
  #OYRANOS=0; export OYRANOS
  LCMS=0; export LCMS
  LIBPNG=0; export LIBPNG
  LIBTIFF=0; export LIBTIFF
  LIBOPENEXR=0; export LIBOPENEXR
  #FTGL=0; export FTGL
  FLTK=0; export FLTK
  X11=0; export X11
  XINERAMA=0; export XINERAMA
  XF86VMODE=0; export XF86VMODE
  DOXYGEN=0; export DOXYGEN
  DEBUG=0; export DEBUG
  PO=0; export PO
  GETTEXT=0; export GETTEXT
  if [ $? -gt 0 ]; then
    ERROR=1
  fi
fi


# Alle ifdefs landen hier

test -n "$ECHO" && $ECHO "" >> $CONF
test -n "$ECHO" && $ECHO "VERSION_A = $VERSION_A" >> $CONF
test -n "$ECHO" && $ECHO "VERSION_B = $VERSION_B" >> $CONF
test -n "$ECHO" && $ECHO "VERSION_C = $VERSION_C" >> $CONF
test -n "$ECHO" && $ECHO "VERSION   = $VERSION" >> $CONF
test -n "$ECHO" && $ECHO "VERSION_L = $VERSION_L" >> $CONF
test -n "$ECHO" && $ECHO "" >> $CONF

test -n "$ECHO" && cat $CONF_TEMP_SH >> $CONF_SH
test -n "$ECHO" && $ECHO "" >> $CONF_SH
test -n "$ECHO" && $ECHO "TARGET=$TARGET" >> $CONF_SH
test -n "$ECHO" && $ECHO "" >> $CONF_SH
test -n "$ECHO" && $ECHO "VERSION=$VERSION" >> $CONF_SH
test -n "$ECHO" && $ECHO "VERSION_L=$VERSION_L" >> $CONF_SH
test -n "$ECHO" && $ECHO "VERSION_A=$VERSION_A" >> $CONF_SH
test -n "$ECHO" && $ECHO "VERSION_B=$VERSION_B" >> $CONF_SH
test -n "$ECHO" && $ECHO "VERSION_C=$VERSION_C" >> $CONF_SH
test -n "$ECHO" && $ECHO "" >> $CONF_SH
test -n "$ECHO" && $ECHO "prefix=$prefix" >> $CONF_SH
test -n "$ECHO" && $ECHO "exec_prefix=$exec_prefix" >> $CONF_SH
test -n "$ECHO" && $ECHO "bindir=$bindir" >> $CONF_SH
test -n "$ECHO" && $ECHO "sbindir=$sbindir" >> $CONF_SH
test -n "$ECHO" && $ECHO "libdir=$libdir" >> $CONF_SH
test -n "$ECHO" && $ECHO "cmmdir=$cmmdir" >> $CONF_SH
test -n "$ECHO" && $ECHO "includedir=$includedir" >> $CONF_SH
test -n "$ECHO" && $ECHO "datadir=$datadir" >> $CONF_SH
test -n "$ECHO" && $ECHO "mandir=$mandir" >> $CONF_SH
test -n "$ECHO" && $ECHO "syscolordir=$syscolordir" >> $CONF_SH
test -n "$ECHO" && $ECHO "usercolordir=$usercolordir" >> $CONF_SH
test -n "$ECHO" && $ECHO "iccdirname=$iccdirname" >> $CONF_SH
test -n "$ECHO" && $ECHO "settingsdirname=$settingsdirname" >> $CONF_SH
test -n "$ECHO" && $ECHO "pixmapdir=$pixmapdir" >> $CONF_SH
test -n "$ECHO" && $ECHO "desktopdir=$desktopdir" >> $CONF_SH
test -n "$ECHO" && $ECHO "oyranos_add=\"$oyranos_add\"" >> $CONF_SH
test -n "$ECHO" && $ECHO "oyranos_x_add=\"$oyranos_x_add\"" >> $CONF_SH
test -n "$INFOECHO" && $INFOECHO ""
test -n "$ECHO" && cat  "$CONF_SH.in" >> $CONF_SH
chmod 0755 "$CONF_SH"
if [ -n "$ECHO" ]; then
  echo_="$CONF_SH created"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
fi


test -n "$ECHO" && $ECHO "#ifndef OYRANOS_VERSION_H" >> $VERS_H
test -n "$ECHO" && $ECHO "#define OYRANOS_VERSION_H" >> $VERS_H
test -n "$ECHO" && $ECHO "" >> $VERS_H
test -n "$ECHO" && $ECHO "#define OYRANOS_VERSION_A $VERSION_A" >> $VERS_H
test -n "$ECHO" && $ECHO "#define OYRANOS_VERSION_B $VERSION_B" >> $VERS_H
test -n "$ECHO" && $ECHO "#define OYRANOS_VERSION_C $VERSION_C" >> $VERS_H
test -n "$ECHO" && $ECHO "#define OYRANOS_VERSION_NAME \"$VERSION\"" >> $VERS_H
test -n "$ECHO" && $ECHO "#define OYRANOS_VERSION $VERSION_L" >> $VERS_H
test -n "$ECHO" && $ECHO "#define OYRANOS_DATE _(\"$TIME\")" >> $CONF_H
test -n "$ECHO" && $ECHO "" >> $VERS_H

test -n "$RPMECHO" && $RPMECHO "Version:         $VERSION" >> $SPEC
test -n "$RPMECHO" && $RPMECHO "Source:          $TARGET"-"$VERSION".tar.gz >> $SPEC
test -n "$RPMECHO" && $RPMECHO "Release:         $RELEASE" >> $SPEC
test -n "$RPMECHO" && $RPMECHO "%define syscolordir     $syscolordir" >> $SPEC
test -n "$RPMECHO" && $RPMECHO "%define usercolordir    $usercolordir" >> $SPEC
test -n "$RPMECHO" && $RPMECHO "%define iccdirname      $iccdirname" >> $SPEC
test -n "$RPMECHO" && $RPMECHO "%define settingsdirname $settingsdirname" >> $SPEC
test -n "$RPMECHO" && $RPMECHO "%define pixmapdir       $pixmapdir" >> $SPEC
test -n "$RPMECHO" && $RPMECHO "%define desktopdir      $desktopdir" >> $SPEC
test -n "$RPMECHO" && cat  "$SPEC" >> $SPECICC
test -n "$RPMECHO" && cat  "$SPECICC.in" >> $SPECICC
test -n "$RPMECHO" && cat  "$SPEC.in" >> $SPEC
echo_="generated $SPEC from $SPEC.in and $SPECICC from $SPECICC.in"
test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"

test -n "$ECHO" && $ECHO "Version: $VERSION" >> $MPKG
test -n "$ECHO" && $ECHO "prefix=$prefix" >> $MPKG
test -n "$ECHO" && $ECHO "exec_prefix=$exec_prefix" >> $MPKG
test -n "$ECHO" && $ECHO "bindir=$bindir" >> $MPKG
test -n "$ECHO" && $ECHO "sbindir=$sbindir" >> $MPKG
test -n "$ECHO" && $ECHO "libdir=$libdir" >> $MPKG
test -n "$ECHO" && $ECHO "cmmdir=$cmmdir" >> $MPKG
test -n "$ECHO" && $ECHO "includedir=$includedir" >> $MPKG
test -n "$ECHO" && $ECHO "datadir=$datadir" >> $MPKG
test -n "$ECHO" && $ECHO "mandir=$mandir" >> $MPKG
test -n "$ECHO" && $ECHO "syscolordir=$syscolordir" >> $MPKG
test -n "$ECHO" && $ECHO "usercolordir=$usercolordir" >> $MPKG
test -n "$ECHO" && $ECHO "iccdirname=$iccdirname" >> $MPKG
test -n "$ECHO" && $ECHO "settingsdirname=$settingsdirname" >> $MPKG
test -n "$ECHO" && $ECHO "pixmapdir=$pixmapdir" >> $MPKG
test -n "$ECHO" && $ECHO "desktopdir=$desktopdir" >> $MPKG
test -n "$ECHO" && cat  "$MPKG.in" >> $MPKG
if [ -n "$ECHO" ]; then
  echo_="generated $MPKG from $MPKG.in"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
fi

test -n "$ECHO" && $ECHO "Version: $VERSION" >> $PKGC
test -n "$ECHO" && $ECHO "prefix=$prefix" >> $PKGC
test -n "$ECHO" && $ECHO "exec_prefix=$exec_prefix" >> $PKGC
test -n "$ECHO" && $ECHO "bindir=$bindir" >> $PKGC
test -n "$ECHO" && $ECHO "sbindir=$sbindir" >> $PKGC
test -n "$ECHO" && $ECHO "libdir=$libdir" >> $PKGC
test -n "$ECHO" && $ECHO "cmmdir=$cmmdir" >> $PKGC
test -n "$ECHO" && $ECHO "includedir=$includedir" >> $PKGC
test -n "$ECHO" && $ECHO "datadir=$datadir" >> $PKGC
test -n "$ECHO" && $ECHO "mandir=$mandir" >> $PKGC
test -n "$ECHO" && $ECHO "syscolordir=$syscolordir" >> $PKGC
test -n "$ECHO" && $ECHO "usercolordir=$usercolordir" >> $PKGC
test -n "$ECHO" && $ECHO "iccdirname=$iccdirname" >> $PKGC
test -n "$ECHO" && $ECHO "settingsdirname=$settingsdirname" >> $PKGC
test -n "$ECHO" && $ECHO "pixmapdir=$pixmapdir" >> $PKGC
test -n "$ECHO" && $ECHO "desktopdir=$desktopdir" >> $PKGC
test -n "$ECHO" && cat  "$PKGC.in" >> $PKGC
if [ -n "$ECHO" ]; then
  test -n "$INFOECHO" && $INFOECHO generated $PKGC from "$PKGC.in"
fi

if [ -n "$ECHO" ]; then
  echo_=""
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="#                       Paths                                  #"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="#                                                              #"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="prefix          =       $prefix"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="exec_prefix     =       $exec_prefix"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="bindir          =       $bindir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="sbindir         =       $sbindir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="libdir          =       $libdir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="cmmdir          =       $cmmdir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="includedir      =       $includedir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="datadir         =       $datadir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="mandir          =       $mandir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="syscolordir     =       $syscolordir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="usercolordir    =       $usercolordir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="iccdirname      =       $iccdirname"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="settingsdirname =       $settingsdirname"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="pixmapdir       =       $pixmapdir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="desktopdir      =       $desktopdir"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="################################################################"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_=""
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
fi

test -n "$ECHO" && $ECHO "src_dir = $src_dir" >> $CONF
test -n "$ECHO" && $ECHO "srcdir = $srcdir" >> $CONF
test -n "$ECHO" && $ECHO "prefix=$prefix" >> $CONF
test -n "$ECHO" && $ECHO "exec_prefix=$exec_prefix" >> $CONF
test -n "$ECHO" && $ECHO "bindir=$bindir" >> $CONF
test -n "$ECHO" && $ECHO "sbindir=$sbindir" >> $CONF
test -n "$ECHO" && $ECHO "libdir=$libdir" >> $CONF
test -n "$ECHO" && $ECHO "cmmdir=$cmmdir" >> $CONF
test -n "$ECHO" && $ECHO "includedir=$includedir" >> $CONF
test -n "$ECHO" && $ECHO "datadir=$datadir" >> $CONF
test -n "$ECHO" && $ECHO "mandir=$mandir" >> $CONF
test -n "$ECHO" && $ECHO "syscolordir=$syscolordir" >> $CONF
test -n "$ECHO" && $ECHO "usercolordir=$usercolordir" >> $CONF
test -n "$ECHO" && $ECHO "iccdirname=$iccdirname" >> $CONF
test -n "$ECHO" && $ECHO "settingsdirname=$settingsdirname" >> $CONF
test -n "$ECHO" && $ECHO "pixmapdir=$pixmapdir" >> $CONF
test -n "$ECHO" && $ECHO "desktopdir=$desktopdir" >> $CONF
test -n "$ECHO" && $ECHO "" >> $CONF

test -n "$ECHO" && $ECHO "syscolordir = $syscolordir" >> $ECI_CONF
test -n "$ECHO" && $ECHO "iccdirname = $iccdirname" >> $ECI_CONF
test -n "$ECHO" && $ECHO "syscolordir = $syscolordir" >> $BASE_CONF
test -n "$ECHO" && $ECHO "iccdirname = $iccdirname" >> $BASE_CONF

test -n "$ECHO" && $ECHO "" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_PREFIX         \"$prefix\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_BINDIR         \"$bindir\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_DATADIR        \"$datadir\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_LIBDIR         \"$libdir\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_CMMDIR         \"$cmmdir\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_SYSCOLORDIR    \"$syscolordir\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_USERCOLORDIR   \"$usercolordir\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_ICCDIRNAME     \"$iccdirname\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_SETTINGSDIRNAME \"$settingsdirname\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_LOCALEDIR      \"$datadir/locale\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_SRCDIR         \"$srcdir\"" >> $CONF_H
test -n "$ECHO" && $ECHO "#define OY_SRC_LOCALEDIR  \"$srcdir/po\"" >> $CONF_H
test -n "$ECHO" && $ECHO "" >> $CONF_H
test -n "$ECHO" && $ECHO $OYAPI >> $VERS_H
test -n "$ECHO" && $ECHO $OYEXPORT >> $VERS_H
test -n "$ECHO" && $ECHO "" >> $VERS_H
# Images formats availablility markers
if [ `cat $CONF_H | grep "HAVE_PNG 1" | wc -l` -gt 0 ]; then
test -n "$ECHO" && $ECHO "#define OY_HAVE_PNG 1" >> $VERS_H
fi
if [ `cat $CONF_H | grep "HAVE_TIFF 1" | wc -l` -gt 0 ]; then
test -n "$ECHO" && $ECHO "#define OY_HAVE_TIFF 1" >> $VERS_H
fi
if [ `cat $CONF_H | grep "HAVE_OPENEXR 1" | wc -l` -gt 0 ]; then
test -n "$ECHO" && $ECHO "#define OY_HAVE_OPENEXR 1" >> $VERS_H
fi
test -n "$ECHO" && $ECHO "" >> $VERS_H
test -n "$ECHO" && $ECHO "#endif /*OYRANOS_VERSION_H*/" >> $VERS_H

CFLAGS="$CFLAGS_COMMON `echo $CFLAGS | $STRIPOPT`"
CXXFLAGS="$CXXFLAGS_COMMON `echo $CXXFLAGS | $STRIPOPT`"
LDFLAGS="`echo $LDFLAGS | $STRIPOPT` \$(dl)"

test -n "$ECHO" && $ECHO "CFLAGS=$CFLAGS"     >> $CONF_NV
test -n "$ECHO" && $ECHO "CFLAGS = $CFLAGS"   >> $CONF_I18N
test -n "$ECHO" && $ECHO "CXXFLAGS = $CXXFLAGS">>$CONF_I18N
test -n "$ECHO" && $ECHO "LDFLAGS = $LDFLAGS" >> $CONF_I18N
test -n "$ECHO" && $ECHO "CFLAGS = $CFLAGS"   >> $CONF
test -n "$ECHO" && $ECHO "CXXFLAGS = $CXXFLAGS">>$CONF
test -n "$ECHO" && $ECHO "LDFLAGS = $LDFLAGS" >> $CONF
test -n "$ECHO" && $ECHO "INSTALL = $INSTALL" >> $CONF
test -n "$ECHO" && $ECHO "INSTALL = $INSTALL" >> $ECI_CONF
test -n "$ECHO" && $ECHO "INSTALL = $INSTALL" >> $BASE_CONF

test -n "$ECHO" && $ECHO "" >> $CONF
test -n "$ECHO" && $ECHO "" >> $CONF

test -n "$INFOECHO" && $INFOECHO ""
test -n "$INFOECHO" && $INFOECHO ""

# prepare makefile from MAKEFILE_DIR
if [ -n "$ECHO" ]; then
  PREPARE_MAKEFILES=1; export PREPARE_MAKEFILES
  ./configure.sh
  PREPARE_MAKEFILES=0; export PREPARE_MAKEFILES
fi

test -n "$ECHO" && $ECHO "" >> $CONF_H
test -n "$ECHO" && $ECHO "#endif /* OY_CONFIG_H */" >> $CONF_H

test -f error.tmp && ERROR=1
test -f error.tmp && rm error.tmp
if [ $ERROR != 0 ]; then
  echo_="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="!!!                     An ERROR occured                     !!!"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="!!!                     See Log above                        !!!"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="!!!                     remove  $CONF                     !!!"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  echo_="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG; test -n "$INFOECHO" && $INFOECHO "$echo_"
  test -n "$INFOECHO" && $INFOECHO ""
  rm Makefile $CONF_H $CONF_SH $SPEC $PKGC $MPKG
  exit
fi

echo_="char * oy_config_log_=\" \\"
test -n "$ECHO" && $ECHO -e "$echo_" >  $CONF_LOG.h
cat $CONF_LOG | sed 's/\"/\\\"/g ; s/$/\ \\n\\/g'  >> $CONF_LOG.h
echo_="\";"
test -n "$ECHO" && $ECHO -e "$echo_" >> $CONF_LOG.h

test -n "$ECHO" && $ECHO "" > mkdepend

if [ -f error.txt ] && [ `cat error.txt | wc -l` -lt 1 ]; then
  rm error.txt
fi

exit 0
