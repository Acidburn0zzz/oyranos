#!/bin/sh

TARGET=oyranos
TARGET_NAME=Oyranos
ERROR=0

CONF_H=config.h
CONF=makefile
CONF_SH=$TARGET-config
CONF_NV=libXNVCtrl/makefile
CONF_I18N=fl_i18n/makefile
SPEC=$TARGET.spec
PKGC=$TARGET.pc
MPKG="$TARGET"_monitor.pc
VERS_H="$TARGET"_version.h
zeile="$0 $@"
if [ -f standard_profiles/eci/makefile.in ]; then
  ECI_CONF=standard_profiles/eci/makefile
  BASE_CONF=standard_profiles/base/makefile
  PROFILE_DIR="standard_profiles/eci standard_profiles/base"
else
  ECI_CONF=error.txt
  BASE_CONF=error.txt
fi
MAKEFILE_DIR=". fl_i18n libXNVCtrl $PROFILE_DIR"; export MAKEFILE_DIR

export CONF_H CONF CONF_I18N CONF_NV

VERSION_A=0
VERSION_B=1
VERSION_C=7
VERSION_ABI_A=1
VERSION_ABI_B=0
RELEASE=0
TIME="November 2004 - November 2006"
VERSION=$VERSION_A.$VERSION_B.$VERSION_C
if [ $VERSION_A -gt 9 ]; then
  VERSION_L="$VERSION_A"
else
  VERSION_L="0$VERSION_A"
fi
if [ $VERSION_B -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_B"
else
  VERSION_L="${VERSION_L}0$VERSION_B"
fi
if [ $VERSION_C -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_C"
else
  VERSION_L="${VERSION_L}0$VERSION_C"
fi
VERSION_L=`echo $VERSION_L | sed 's/^0*//g'`

echo "" > $CONF
echo "" > $CONF_H
echo "" > $CONF_I18N
echo "" > $CONF_NV
echo "" > $ECI_CONF
echo "" > $BASE_CONF
echo "" > $PKGC
echo "" > $MPKG
echo "" > $SPEC

debug=0

echo ""
echo "################################################################"
echo "#                                                              #"
echo "        Welcome to $TARGET_NAME Version $VERSION configurator"
echo "#                                                              #"
echo "#                       Configuration                          #"

if [ $# -gt 0 ]; then
  prefix=""
  while [ $# -gt 0 ]; do
    arg=$1
    # prefix exec_prefix bindir sbindir libdir includedir datadir mandir
    switch=prefix
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      prefix="`echo \"$1\" | sed s/\"--$switch=\"//`"
    fi
    switch="exec-prefix"
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      exec_prefix="`echo $1 | sed s/--$switch=//`"
    fi
    switch=bindir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      bindir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=sbindir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      sbindir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=libdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      libdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=includedir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      includedir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=datadir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      datadir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=mandir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      mandir="`echo $1 | sed s/--$switch=//`"
    fi
    # syscolordir usercolordir iccdirname settingsdirname pixmapdir desktopdir
    switch=syscolordir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      syscolordir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=usercolordir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      usercolordir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=iccdirname
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      iccdirname="`echo $1 | sed s/--$switch=//`"
    fi
    switch=settingsdirname
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      settingsdirname="`echo $1 | sed s/--$switch=//`"
    fi
    switch=pixmapdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      pixmapdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=desktopdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      desktopdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=elektra-internal
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      internalelektra="`echo $1 | sed s/--$switch=//`"
    fi
    switch=enable-debug
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      debug="1"
    fi
    switch=help
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      echo "Usage:"
      echo "   --prefix=[/usr/local]                package prefix"
      echo "   --exec-prefix=[\$prefix]              package exec-prefix"
      echo "   --bindir=[\$exec-prefix/bin]          binary installation path"
      echo "   --sbindir=[\$exec-prefix/sbin]        super user binary installation path"
      echo "   --libdir=[\$exec-prefix/lib]          library installation path"
      echo "   --includedir=[\$prefix/include]       include file installation"
      echo "   --datadir=[\$prefix/data]             application data base path"
      echo "   --mandir=[\$datadir/man]              manual installation path"
      echo "   --syscolordir=[\$datadir/color]       Oyranos system color path"
      echo "   --usercolordir=[~/.color]            Oyranos user color path"
      echo "   --iccdirname=[icc]                   Oyranos ICC profile directory"
      echo "   --settingsdirname=[settings]         Oyranos settings directory"
      echo "   --pixmapdir=[\$datadir/pixmaps]       icon installation path"
      echo "   --desktopdir=[\$datadir/applications] xdg installation path"
      echo "   --internal-elektra=[yes/no]          use internal Elektra"
      echo ""
      echo "   --with-fltk-config=[fltk-config]     alternative fltk version"
      echo "   --enable-debug                       debug version"
      echo "   --help"
      echo ""
      echo " Optionally set the CC, CXX, CFLAGS, CXXFLAGS and LDFLAGS environment variables."
      echo ""
      exit
    fi
    shift
  done
fi

echo "$zeile" > config.log
chmod 0755 config.log

src_dir="`(cd ..;pwd)`/""$TARGET"_"$VERSION"
srcdir="`pwd`"

#prefix
if [ -z "$prefix" ]; then
  prefix=/usr/local
fi

if [ -z "$datadir" ]; then
  test -f $prefix/share/config.site && . $prefix/share/config.site
else
  test -f $datadir/config.site && . $datadir/config.site
fi

test -f error.txt && rm error.txt
test -f mkdepend && rm mkdepend config.h


echo "# automatically generated file - do not edit" >> $CONF
echo "/* automatically generated file - do not edit */" >> $CONF_H
echo "/* automatically generated file - do not edit */" > $VERS_H
echo "" >> $CONF
echo "TARGET = $TARGET" >> $CONF

echo "#                                                              #"


# detect System

UNAME_=`uname`
OSUNAME=BSD
if [ $? = 0 ] && [ $UNAME_ = "Darwin" ]; then
  echo "Darwin PPC              detected"
  echo "APPLE = 1" >> $CONF
  echo "OSX_H = -DHAVE_OSX" >> $CONF
  echo "#define APPLE 1" >> $CONF_H
  OSUNAME=Darwin
else
  if [ $UNAME_ = "Linux" ]; then
    echo "LINUX = 1" >> $CONF
    echo "#define LINUX 1" >> $CONF_H
    echo "Linux system            detected"
    OSUNAME=Linux
  else
    if [ $UNAME_ = "SunOS" ]; then
      echo "SOLARIS = 1" >> $CONF
      echo "#define SOLARIS 1" >> $CONF_H
      echo "SunOS                   detected"
      OSUNAME=SunOS
    else
      if [ $UNAME_ = "OpenBSD" ] || [ $UNAME_ = "NetBSD" ] || [ $UNAME_ = "FreeBSD" ]; then
        echo "BSD = 1" >> $CONF
        OS_EXT=.bsd
        echo "#define BSD 1" >> $CONF_H
        echo "BSD $UNAME_             detected"
        OSUNAME=BSD
      else
        echo "Oyranos may or may not compile on your $UNAME_ system"
      fi
    fi
  fi
fi
echo "MAKEFILE_ARCH = Makefile$OS_EXT"  >> $CONF
MACH_=`uname -m`
MACH=BUILD_32
BARCH=""
LINE_ARCH=""
if [ $? = 0 ]; then
  if [ "$MACH_" = "i686" ]; then
    echo "32-bit system           detected"
  else
    if [ "$MACH_" = "x86_64" ]; then
      MACH=BUILD_64
      echo "BUILD_64 = 1" >> $CONF
      echo "X86_64                  will build in 64 bit mode"
      BARCH="64"
    else
      if [ "$MACH_" = "sun4u" ]; then
        MACH=BUILD_64
        echo "BUILD_64 = 1" >> $CONF
        echo "spark ultra 4           will build in 64 bit mode"
        BARCH="64"
        LINE_ARCH="-64"
      fi
    fi
  fi
fi
LIBDIR="lib"$BARCH
export MACH OSUNAME LIBDIR BARCH LINE_ARCH


# exec_prefix bindir sbindir libdir includedir datadir
if [ -z "$exec_prefix" ]; then
  exec_prefix="$prefix"
fi
if [ "`echo $exec_prefix | grep 64 | wc -l`" -eq "1" ]; then
  BARCH=""
  LIBDIR="lib"
  echo unset BARCH LIBDIR
  export BARCH LIBDIR
fi
echo "BARCH=$BARCH" >> $CONF

if [ -z "$bindir" ]; then
  bindir="$exec_prefix/bin"
fi
if [ -z "$sbindir" ]; then
  sbindir="$exec_prefix/sbin"
fi
if [ -z "$libdir" ]; then
  libdir="$exec_prefix/$LIBDIR"
fi
if [ -z "$includedir" ]; then
  includedir="$prefix/include"
fi
if [ -z "$datadir" ]; then
  datadir="$prefix/share"
fi
if [ -z "$mandir" ]; then
  mandir="$datadir/man"
fi
# syscolordir usercolordir iccdirname settingsdirname pixmapdir desktopdir
if [ -z "$syscolordir" ]; then
  syscolordir="$datadir/color"
fi
if [ -z "$usercolordir" ]; then
  usercolordir="~/.color"
fi
if [ -z "$iccdirname" ]; then
  iccdirname="icc"
fi
if [ -z "$settingsdirname" ]; then
  settingsdirname="settings"
fi
if [ -z "$pixmapdir" ]; then
  pixmapdir="$datadir/pixmaps"
fi
if [ -z "$desktopdir" ]; then
  desktopdir="$datadir/applications"
fi
export prefix exec_prefix bindir sbindir libdir includedir datadir mandir
export syscolordir usercolordir pixmapdir desktopdir
export debug

PATH=$bindir:$PATH
export PATH



# detect Libraries

echo "LIB=/"$LIBDIR >> $CONF

FLTK_=`fltk-config --cxxflags 2>>error.txt`
if [ $? = 0 ] && [ -n "$FLTK_" ]; then
  FLTK=1
fi


FLU_=`flu-config --cxxflags 2>>error.txt`
if [ $? = 0 ] && [ -n "$FLU_" ] && [ -n "$FLTK_" ]; then
  FLU=1
fi

if [ "$FLTK" = 1 ]; then
  echo "FLTK_GUI = $TARGET-config-fltk" >> $CONF
  if [ `fltk-config --version` = "1.1.7" ]; then
    echo -e "\c"
  else
    if [ -n "$FLU_" ] && [ -n "$FLTK_" ]; then
      echo "FLU_GUI = $TARGET-config-flu" >> $CONF
    fi
  fi
fi

if [ "$internalelektra" != "no" ]; then
  ELEKTRA_VERSION="elektra-0.6.4"
  export ELEKTRA_VERSION
fi
export internalelektra


ECHO="echo"; export ECHO
ELEKTRA=1; export ELEKTRA
#OYRANOS=1; export OYRANOS
LCMS=1; export LCMS
LIBPNG=2; export LIBPNG
#FTGL=1; export FTGL
FLTK=1; export FLTK
FLU=2; export FLU
X11=1; export X11
XINERAMA=1; export XINERAMA
XF86VMODE=1; export XF86VMODE
DOXYGEN=2; export DOXYGEN
DEBUG=1; export DEBUG
PO=1; export PO
./configure.sh
ELEKTRA=0; export ELEKTRA
#OYRANOS=0; export OYRANOS
LCMS=0; export LCMS
LIBPNG=0; export LIBPNG
#FTGL=0; export FTGL
FLTK=0; export FLTK
FLU=0; export FLU
X11=1; export X11
XINERAMA=1; export XINERAMA
XF86VMODE=1; export XF86VMODE
DOXYGEN=0; export DOXYGEN
DEBUG=0; export DEBUG
PO=0; export PO
if [ $? -gt 0 ]; then
  ERROR=1
fi

ECHO=""; export ECHO
conf_temp=$CONF
CONF=$CONF_NV; export CONF
./configure.sh
CONF=$conf_temp; export CONF
ECHO="echo"; export ECHO
X11=0; export X11
XINERAMA=0; export XINERAMA
XF86VMODE=0; export XF86VMODE


# Alle ifdefs landen hier

echo "" >> $CONF
echo "VERSION_A = $VERSION_A" >> $CONF
echo "VERSION_B = $VERSION_B" >> $CONF
echo "VERSION_C = $VERSION_C" >> $CONF
echo "VERSION   = $VERSION" >> $CONF
echo "VERSION_L = $VERSION_L" >> $CONF
echo "" >> $CONF

echo "#!/bin/sh" > $CONF_SH
echo "" >> $CONF_SH
echo "TARGET=$TARGET" >> $CONF_SH
echo "" >> $CONF_SH
echo "VERSION=$VERSION" >> $CONF_SH
echo "VERSION_L=$VERSION_L" >> $CONF_SH
echo "VERSION_A=$VERSION_A" >> $CONF_SH
echo "VERSION_B=$VERSION_B" >> $CONF_SH
echo "VERSION_C=$VERSION_C" >> $CONF_SH
echo "" >> $CONF_SH
echo "prefix=$prefix" >> $CONF_SH
echo "exec_prefix=$exec_prefix" >> $CONF_SH
echo "bindir=$bindir" >> $CONF_SH
echo "sbindir=$sbindir" >> $CONF_SH
echo "libdir=$libdir" >> $CONF_SH
echo "includedir=$includedir" >> $CONF_SH
echo "datadir=$datadir" >> $CONF_SH
echo "mandir=$mandir" >> $CONF_SH
echo "syscolordir=$syscolordir" >> $CONF_SH
echo "usercolordir=$usercolordir" >> $CONF_SH
echo "iccdirname=$iccdirname" >> $CONF_SH
echo "settingsdirname=$settingsdirname" >> $CONF_SH
echo "pixmapdir=$pixmapdir" >> $CONF_SH
echo "desktopdir=$desktopdir" >> $CONF_SH
echo "ELEKTRA_VERSION=$ELEKTRA_VERSION" >> $CONF_SH
echo ""
cat  "$CONF_SH.in" >> $CONF_SH
chmod 0755 "$CONF_SH"
echo "$CONF_SH created"


echo "#ifndef OYRANOS_VERSION_H" >> $VERS_H
echo "#define OYRANOS_VERSION_H" >> $VERS_H
echo "" >> $VERS_H
echo "#define OYRANOS_VERSION_A $VERSION_A" >> $VERS_H
echo "#define OYRANOS_VERSION_B $VERSION_B" >> $VERS_H
echo "#define OYRANOS_VERSION_C $VERSION_C" >> $VERS_H
echo "#define OYRANOS_VERSION_NAME $VERSION" >> $VERS_H
echo "#define OYRANOS_VERSION $VERSION_L" >> $VERS_H
echo "#define OYRANOS_DATE _(\"$TIME\")" >> $VERS_H
echo "" >> $VERS_H
echo "#endif /*OYRANOS_VERSION_H*/" >> $VERS_H

echo "Version:         $VERSION" >> $SPEC
echo "Source:          $TARGET"-"$VERSION".tar.gz >> $SPEC
echo "Release:         $RELEASE" >> $SPEC
echo "%define syscolordir     $syscolordir" >> $SPEC
echo "%define usercolordir    $usercolordir" >> $SPEC
echo "%define iccdirname      $iccdirname" >> $SPEC
echo "%define settingsdirname $settingsdirname" >> $SPEC
echo "%define pixmapdir       $pixmapdir" >> $SPEC
echo "%define desktopdir      $desktopdir" >> $SPEC
cat  "$SPEC.in" >> $SPEC
echo generated $SPEC from $SPEC.in

echo "Version: $VERSION" >> $MPKG
echo "prefix=$prefix" >> $MPKG
echo "exec_prefix=$exec_prefix" >> $MPKG
echo "bindir=$bindir" >> $MPKG
echo "sbindir=$sbindir" >> $MPKG
echo "libdir=$libdir" >> $MPKG
echo "includedir=$includedir" >> $MPKG
echo "datadir=$datadir" >> $MPKG
echo "mandir=$mandir" >> $MPKG
echo "syscolordir=$syscolordir" >> $MPKG
echo "usercolordir=$usercolordir" >> $MPKG
echo "iccdirname=$iccdirname" >> $MPKG
echo "settingsdirname=$settingsdirname" >> $MPKG
echo "pixmapdir=$pixmapdir" >> $MPKG
echo "desktopdir=$desktopdir" >> $MPKG
cat  "$MPKG.in" >> $MPKG
echo generated $MPKG from "$MPKG.in"

echo "Version: $VERSION" >> $PKGC
echo "prefix=$prefix" >> $PKGC
echo "exec_prefix=$exec_prefix" >> $PKGC
echo "bindir=$bindir" >> $PKGC
echo "sbindir=$sbindir" >> $PKGC
echo "libdir=$libdir" >> $PKGC
echo "includedir=$includedir" >> $PKGC
echo "datadir=$datadir" >> $PKGC
echo "mandir=$mandir" >> $PKGC
echo "syscolordir=$syscolordir" >> $PKGC
echo "usercolordir=$usercolordir" >> $PKGC
echo "iccdirname=$iccdirname" >> $PKGC
echo "settingsdirname=$settingsdirname" >> $PKGC
echo "pixmapdir=$pixmapdir" >> $PKGC
echo "desktopdir=$desktopdir" >> $PKGC
cat  "$PKGC.in" >> $PKGC
echo generated $PKGC from "$PKGC.in"


echo ""
echo "#                       Paths                                  #"
echo "#                                                              #"
echo "prefix          =       $prefix"
echo "exec_prefix     =       $exec_prefix"
echo "bindir          =       $bindir"
echo "sbindir         =       $sbindir"
echo "libdir          =       $libdir"
echo "includedir      =       $includedir"
echo "datadir         =       $datadir"
echo "mandir          =       $mandir"
echo "syscolordir     =       $syscolordir"
echo "usercolordir    =       $usercolordir"
echo "iccdirname      =       $iccdirname"
echo "settingsdirname =       $settingsdirname"
echo "pixmapdir       =       $pixmapdir"
echo "desktopdir      =       $desktopdir"
echo "################################################################"
echo ""

echo "src_dir = $src_dir" >> $CONF
echo "srcdir = $srcdir" >> $CONF
echo "prefix=$prefix" >> $CONF
echo "exec_prefix=$exec_prefix" >> $CONF
echo "bindir=$bindir" >> $CONF
echo "sbindir=$sbindir" >> $CONF
echo "libdir=$libdir" >> $CONF
echo "includedir=$includedir" >> $CONF
echo "datadir=$datadir" >> $CONF
echo "mandir=$mandir" >> $CONF
echo "syscolordir=$syscolordir" >> $CONF
echo "usercolordir=$usercolordir" >> $CONF
echo "iccdirname=$iccdirname" >> $CONF
echo "settingsdirname=$settingsdirname" >> $CONF
echo "pixmapdir=$pixmapdir" >> $CONF
echo "desktopdir=$desktopdir" >> $CONF
echo "" >> $CONF

echo "syscolordir = $syscolordir" >> $ECI_CONF
echo "iccdirname = $iccdirname" >> $ECI_CONF
echo "syscolordir = $syscolordir" >> $BASE_CONF
echo "iccdirname = $iccdirname" >> $BASE_CONF

echo "#define PREFIX         \"$prefix\"" >> $CONF_H
echo "#define BINDIR         \"$bindir\"" >> $CONF_H
echo "#define DATADIR        \"$datadir\"" >> $CONF_H
echo "#define SYSCOLORDIR    \"$syscolordir\"" >> $CONF_H
echo "#define USERCOLORDIR   \"$usercolordir\"" >> $CONF_H
echo "#define ICCDIRNAME     \"$iccdirname\"" >> $CONF_H
echo "#define SETTINGSDIRNAME \"$settingsdirname\"" >> $CONF_H
echo "#define LOCALEDIR      \"$datadir/locale\"" >> $CONF_H
echo "#define SRCDIR         \"$srcdir\"" >> $CONF_H
echo "#define SRC_LOCALEDIR  \"$srcdir/po\"" >> $CONF_H
echo "" >> $CONF_H

if [ -z "$CC" ]; then
  CC=cc$LINE_ARCH
fi
if [ -z "$CXX" ]; then
  CXX=c++$LINE_ARCH
fi

echo "CXX = $CXX" >> $CONF
echo "CC = $CC" >> $CONF
echo "CXX = $CXX" >> $CONF_I18N
echo "CC = $CC" >> $CONF_I18N
echo "CXX = $CXX" >> $CONF_NV
echo "CC = $CC" >> $CONF_NV

CFLAGS_COMMON="$CFLAGS \$(INCL)"
CXXFLAGS_COMMON="$CXXFLAGS \$(INCL) \$(FLU_H) \$(FLTK_H)"
echo "RM = rm -vf" >> $CONF
echo "RM = rm -vf" >> $CONF_NV
if [ $OSUNAME = "Darwin" ]; then
  echo "LIBEXT = .dylib" >> $CONF
  GCC_VERSION_INFO="-Wl,-compatibility_version -Wl,$VERSION_ABI_A -Wl,-current_version -Wl,$VERSION_ABI_A.$VERSION_ABI_B"
  echo "LINK_FLAGS_DYNAMIC = $LDFLAGS -dynamiclib  -L. \$(ICONV) $GCC_VERSION_INFO" >> $CONF
  echo "LINK_NAME =  -install_name  \$(libdir)/\$(LIBSONAMEFULL)" >> $CONF
  echo "LINK_NAME_M = -install_name \$(libdir)/\$(LIB_MONI_SONAMEFULL)" >> $CONF
  echo "COPY = cp -pv" >> $CONF
  LDFLAGS="$LDFLAGS -L. \$(ICONV)"
  echo "MAKEDEPEND	= /usr/X11R6/bin/makedepend -Y" >> $CONF
  echo "MSGMERGE = msgmerge" >> $CONF
  CFLAGS="$CFLAGS_COMMON -Wall -g \$(DEBUG) -DPIC -Wunused -fno-exceptions"
  CXXFLAGS="$CXXFLAGS_COMMON -Wall -g \$(DEBUG) -DPIC -Wunused -fno-exceptions"
  echo "REZ = fltk-config --post \$@" >> $CONF
  echo "ICONV = -liconv" >> $CONF
  echo "I18N_LIB = \$(ICONV) -lintl \$(LIBNAMEV)" >> $CONF
  echo "I18N_LIBSTAT = \$(ICONV) -lintl \$(LIBNAMEV)" >> $CONF
  INSTALL="install -v"
else
  echo "SO = .so" >> $CONF
  echo "LINK_FLAGS_DYNAMIC = $LDFLAGS -shared $GCC_VERSION_INFO" >> $CONF
  echo "MSGMERGE = msgmerge" >> $CONF
  echo "MSGMERG_OPTS = --update" >> $CONF
  echo "XGETTEXT_OPTIONS = --keyword=gettext --flag=gettext:1:pass-c-format \
        --keyword=_ --flag=_:1:pass-c-format \
        --keyword=N_ --flag=N_:1:pass-c-format \
        --copyright-holder='Kai-Uwe Behrmann' \
        --msgid-bugs-address='ku.b@gmx.de' \
        --from-code=utf-8" >> $CONF
  if [ $OSUNAME = "Linux" ]; then
    echo "COPY = cp -vdpa" >> $CONF
    LDFLAGS="$LDFLAGS -L."
    echo "LINK_FLAGS_STATIC =" >> $CONF
    echo "LINK_NAME = -Wl,-soname -Wl,\$(LIBSONAMEFULL)" >> $CONF
    echo "LINK_NAME_M = -Wl,-soname -Wl,\$(LIB_MONI_SONAMEFULL)" >> $CONF
    echo "LINK_LIB_PATH = -Wl,--rpath -Wl,\$(libdir)" >> $CONF
    echo "LINK_SRC_PATH = -Wl,--rpath -Wl,\$(srcdir)" >> $CONF
    echo "MAKEDEPEND	= makedepend -Y" >> $CONF
    CFLAGS="$CFLAGS_COMMON"
    CXXFLAGS="$CXXFLAGS_COMMON"
    INSTALL="install -v"
  else
    echo "COPY = cp -p" >> $CONF
    if [ $OSUNAME = "BSD" ]; then
      LDFLAGS="$LDFLAGS \$(ICONV)"
      INSTALL="install -v"
    fi
    if [ $OSUNAME = "SunOS" ]; then
      echo "ICONV = -liconv" >> $CONF
      LDFLAGS="$LDFLAGS -mimpure-text -ldl \$(ICONV)"
      INSTALL="install -v"
    else
      echo "ICONV = -liconv" >> $CONF
      LDFLAGS="$LDFLAGS -mimpure-text -ldl \$(ICONV)"
      INSTALL="install"
    fi
    echo "I18N_LIB = \$(ICONV) -lintl \$(LIBNAMEV)" >> $CONF
    echo "I18N_LIBSTAT = \$(ICONV) -lintl \$(LIBNAMEV)" >> $CONF
    echo "MAKEDEPEND	= makedepend -Y" >> $CONF
    CFLAGS="$CFLAGS_COMMON -Wall -g -L. -fPIC"
    CXXFLAGS="$CXXFLAGS_COMMON -Wall -g -L. -fPIC"
    echo "RM = rm -f" >> $CONF
    echo "RM = rm -f" >> $CONF_NV
  fi
fi
echo "CFLAGS=$CFLAGS"     >> $CONF_NV
echo "CFLAGS = $CFLAGS"   >> $CONF_I18N
echo "CXXFLAGS = $CXXFLAGS">>$CONF_I18N
echo "LDFLAGS = $LDFLAGS" >> $CONF_I18N
echo "CFLAGS = $CFLAGS"   >> $CONF
echo "CXXFLAGS = $CXXFLAGS">>$CONF
echo "LDFLAGS = $LDFLAGS" >> $CONF
echo "INSTALL = $INSTALL" >> $CONF
echo "INSTALL = $INSTALL" >> $ECI_CONF
echo "INSTALL = $INSTALL" >> $BASE_CONF


echo "" >> $CONF
echo "" >> $CONF

echo ""
echo ""

# prepare makefile from MAKEFILE_DIR
PREPARE_MAKEFILES=1; export PREPARE_MAKEFILES
./configure.sh
PREPARE_MAKEFILES=0; export PREPARE_MAKEFILES

if [ $ERROR != 0 ]; then
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo "!!!                     An ERROR occured                     !!!"
  echo "!!!                     See Log above                        !!!"
  echo "!!!                     remove  $CONF                     !!!"
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo ""
  rm $CONF $CONF_H $CONF_SH $SPEC $PKGC $MPKG
  exit
fi

echo "" > mkdepend

if [ `cat error.txt | wc -l` -lt 1 ]; then
  rm error.txt
fi


